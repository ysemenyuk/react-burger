{"version":3,"sources":["components/Modal/ModalOverlay/ModalOverlay.module.css","components/BurgerConstructor/ToppingCard/ToppingCard.module.css","components/BurgerConstructor/BunCard/BunCard.module.css","pages/Profile/Profile.module.css","pages/404/NotFound.module.css","components/OrderCard/OrderCard.module.css","components/OrdersStatistic/OrdersStatistic.module.css","hooks/useHover.ts","components/AppHeader/HeaderLink/HeaderLink.tsx","components/AppHeader/AppHeader.tsx","utils/constants.ts","components/BurgerIngredients/IngridientCard/IngridientCard.tsx","hooks/useRedux.ts","utils/helpers.ts","redux/selectors/userSelectors.ts","redux/selectors/constructorSelectors.ts","redux/selectors/ingredientsSelectors.ts","redux/selectors/ordersSelectors.ts","services/normaService.ts","redux/constants/constants.ts","redux/actions/ingredientsActions.ts","components/BurgerIngredients/BurgerIngredients.tsx","hooks/useScroll.ts","components/Modal/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","images/done.gif","components/OrderCreateDetails/OrderCreateDetails.tsx","components/BurgerConstructor/ToppingCard/ToppingCard.tsx","components/BurgerConstructor/BunCard/BunCard.tsx","components/UI/Loader/Loader.tsx","components/UI/Message/Message.tsx","redux/actions/constructorActions.ts","components/BurgerConstructor/BurgerConstructor.tsx","pages/Home/Home.tsx","components/FormContainer/FormContainer.tsx","hooks/useInput.ts","hooks/usePasswordInput.ts","pages/Login/Login.tsx","redux/actions/userActions.ts","pages/Register/Register.tsx","pages/ForgotPassword/ForgotPassword.tsx","pages/ResetPassword/ResetPassword.tsx","hooks/useProfileInput.ts","components/ProfileForm/ProfileForm.tsx","components/ProfileSidebar/ProfileSidebar.tsx","hooks/useOrderDetails.ts","components/OrderCard/OrderCard.tsx","redux/actions/ordersActions.ts","components/UserOrdersList/UserOrdersList.tsx","pages/Profile/Profile.tsx","components/IngredientDetails/IngredientDetails.tsx","pages/Ingredient/Ingredient.tsx","pages/404/NotFound.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/ModalWithIngridient/ModalWithIngredient.tsx","components/OrdersList/OrdersList.tsx","components/OrdersStatistic/OrdersStatistic.tsx","pages/Feed/Feed.tsx","components/OrderDetails/OrderDetails.tsx","pages/Order/Order.tsx","pages/UserOrder/UserOrder.tsx","components/ModalWithOrder/ModalWithOrder.tsx","components/App/App.tsx","redux/middleware/socketMiddleware.ts","redux/reducers/ordersReducer.ts","redux/reducers/ingredientsReducer.ts","redux/reducers/constructorReducer.ts","redux/reducers/userReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx","components/OrderDetails/OrderDetails.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/ProfileSidebar/ProfileSidebar.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/Modal/Modal.module.css","components/OrderCreateDetails/OrderCreateDetails.module.css","pages/Login/Login.module.css","components/AppHeader/AppHeader.module.css","pages/Home/Home.module.css","components/BurgerIngredients/IngridientCard/IngridientCard.module.css","pages/Register/Register.module.css","pages/ForgotPassword/ForgotPassword.module.css","pages/ResetPassword/ResetPassword.module.css","components/IngredientDetails/IngredientDetails.module.css","pages/Feed/Feed.module.css","components/App/App.module.css","components/AppHeader/HeaderLink/HeaderLink.module.css","components/UI/Loader/Loader.module.css","components/UI/Message/Message.module.css","components/FormContainer/FormContainer.module.css","components/ProfileForm/ProfileForm.module.css","components/UserOrdersList/UserOrdersList.module.css","pages/Ingredient/Ingredient.module.css","components/OrdersList/OrdersList.module.css","pages/Order/Order.module.css","pages/UserOrder/UserOrder.module.css"],"names":["module","exports","useHover","useState","isHover","setIsHover","onMouseEnter","onMouseLeave","HeaderLink","children","to","active","last","props","type","linkClass","cn","styles","link","text_color_inactive","className","Children","map","child","isValidElement","cloneElement","AppHeader","pathname","useLocation","header","container","logo","itemsTypes","INGRIDIENTS","TOPPINGS","IngridientCard","item","count","onCardClick","useDrag","collect","monitor","opacity","isDragging","drag","style","ref","itemCard","onClick","size","src","image","alt","name","price","useAppDispatch","useDispatch","useAppSelector","useSelector","setRefreshToken","refreshToken","localStorage","setItem","getRefreshToken","getItem","setAccessToken","token","accessToken","split","getAccessToken","getOrderStatus","status","getConstructorMessage","bun","toppingLength","getFormattedDate","date","moment","tz","calendar","userInfo","state","user","info","login","register","profile","updateProfile","forgotPassword","resetPassword","orderItems","burgerConstructor","toppings","orderCreate","items","burgerIngredients","getItems","ingredientDetails","itemDetails","wsAllOrders","orders","allOrders","wsUserOrders","userOrders","orderDetails","orederDetails","order","contentType","checkResponse","response","ok","json","then","err","Promise","reject","baseFetch","url","options","a","headers","fetch","updateRefreshToken","method","body","JSON","stringify","authFetch","Authorization","message","fetchIngredients","ingredients","data","createOrder","number","fetchUserInfo","updateUserInfo","email","password","userRegister","userLogin","userLogout","removeItem","normaService","INGREDIENTS_REQUEST","INGREDIENTS_SUCCESS","INGREDIENTS_ERROR","SET_INGREDIENT_DETAILS","RESET_INGREDIENT_DETAILS","ADD_BUN","ADD_TOPPING","DELETE_TOPPING","UPDATE_TOPPINGS_LIST","CLEAR_ORDER_ITEMS","ORDER_REQUEST","ORDER_SUCCESS","ORDER_ERROR","CLOSE_ORDER_CREATE_DETAILS","USER_CHECK_AUTH_FAIL","USER_CHECK_AUTH_SUCCESS","USER_CHECK_AUTH_ERROR","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR","userLoginMap","request","success","error","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","USER_LOGOUT_ERROR","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_ERROR","userRegisterMap","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_ERROR","userProfileMap","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_ERROR","userUpdateProfileMap","USER_FORGOT_PASSWORD_REQUEST","USER_FORGOT_PASSWORD_SUCCESS","USER_FORGOT_PASSWORD_ERROR","userForgotPasswordMap","USER_RESET_PASSWORD_REQUEST","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_ERROR","userResetPasswordMap","WS_ALL_ORDERS_CONNECTION_START","WS_ALL_ORDERS_CONNECTION_FINISH","WS_ALL_ORDERS_CONNECTION_SUCCESS","WS_ALL_ORDERS_CONNECTION_ERROR","WS_ALL_ORDERS_CONNECTION_CLOSED","WS_GET_ALL_ORDERS","SET_ORDER_DETAILS","RESET_ORDER_DETAILS","wsAllOrdersActions","wsInit","wsClose","onOpen","onError","onClose","onMessage","WS_USER_ORDERS_CONNECTION_START","WS_USER_ORDERS_CONNECTION_FINISH","WS_USER_ORDERS_CONNECTION_SUCCESS","WS_USER_ORDERS_CONNECTION_ERROR","WS_USER_ORDERS_CONNECTION_CLOSED","WS_GET_USER_ORDERS","wsUserOrdersActions","getIngredients","dispatch","types","payload","ingredientsGroups","title","BurgerIngredients","history","useHistory","location","ingredientsSelectors","constructorSelectors","ingredientsByType","useMemo","reduce","acc","push","quantity","_id","calculateQuantity","currentTab","setCurrentTab","containerRef","useRef","targetsRefs","callback","useEffect","targets","Object","values","current","root","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","el","observe","unobserve","useScroll","target","dataset","handleTabClick","tab","scrollTo","top","offsetTop","behavior","handleCardClick","background","section","tabs","value","ingredientsList","ingredientsGroupTitle","ingredientsGroup","ModalOverlay","overlay","Modal","largeTitle","modalRoot","document","getElementById","onKeyDown","e","code","overflow","addEventListener","removeEventListener","titleStyle","ReactDOM","createPortal","currentTarget","modal","closeIcon","emptyTitle","OrderCreateDetails","orderNumber","textNumber","done","textStart","textWait","ToppingCard","index","handleMoveCard","handleDeleteCard","useDrop","accept","isOver","hover","dragIndex","hoverIndex","drop","draggable","text","thumbnail","handleClose","uuid","BunCard","isLocked","Loader","height","ldsDualRing","Message","clearOrderItems","BurgerConstructor","isAuth","userSelectors","visible","loading","orderItemsIds","itemsIds","getOrderItemsIds","orderTotalPrice","calculateTotalPrice","addBun","addTopping","uuidv4","dropTarget","deleteTopping","useCallback","updatedToppings","list","dragCard","updatedList","splice","swapItems","length","disabled","clearBtn","loader","dropTargetHover","itemsBox","total","from","Home","constructor","DndProvider","backend","HTML5Backend","FormContainer","useInput","initValue","setValue","onChange","usePasswordInput","showText","setShowText","onIconClick","setTimeout","focus","Login","emailInput","passInput","form","onSubmit","preventDefault","placeholder","icon","Register","nameInput","ForgotPassword","forgotUserPassword","ResetPassword","usePassInput","tokenInput","resetUserPassword","useProfileInput","setDisabled","inputRef","onReset","ProfileForm","userInput","buttons","ProfileSidebar","sidebar","menu","exact","activeClassName","menuLink","menuButton","useOrderDetails","orderIngredientsIds","filter","id","allIngredientsMap","orderIngredientsMap","qnty","orderIngredients","orderPrice","sum","OrderCard","userCard","createdAt","orderId","timestamp","orderInfo","iconsForRender","slice","restIcons","ingredientIcon","zIndex","image_mobile","ingredientsIcons","wsAllOrdersConnectionStart","wsAllOrdersConnectionClose","wsUserOrdersConnectionStart","wsUserOrdersConnectionClose","setOrderDetails","UserOrdersList","ordersSelectors","wsConnected","wsError","ordersList","ProfilePage","path","useRouteMatch","IngredientDetails","ingredient","image_large","calories","proteins","fat","carbohydrates","Ingredient","useParams","currentItem","find","NotFound","main","ProtectedRoute","rest","render","ModalWithIngredient","goBack","OrdersList","OrderStatistic","ordersTotal","ordersTotalToday","completedOrders","inProgressOrders","column","completed","inProgress","today","Feed","feed","OrdersStatistic","OrderDetails","ingredientInfo","ingredientName","ingredientPrice","footer","Order","currentOrder","UserOrder","ModalWithOrder","App","isCheckAuth","action","wrapper","Profile","socketMiddleware","wsUrl","wsActions","withAuth","store","socket","next","WebSocket","onopen","event","onerror","onclose","onmessage","parsedData","parse","restParsedData","close","allOrdersInitialState","userOrdersInitialState","orederDetailsInitialState","ordersReducer","combineReducers","totalToday","reverse","initState","createRequestReducer","userLoginReducer","userRegisterReducer","userProfileReducer","userUpdateProfileReducer","userForgotPasswordReducer","userResetPasswordReducer","userReducer","rootReducer","middleware","thunk","createStore","composeWithDevTools","applyMiddleware"],"mappings":"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","file":"static/js/main.09228668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalOverlay_overlay__1kPXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ToppingCard_item__Lo1-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bun\":\"BunCard_bun__vtCt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__WdMDr\",\"sidebar\":\"Profile_sidebar__3c3Eh\",\"menu\":\"Profile_menu__2nCtR\",\"menuLink\":\"Profile_menuLink__3Lwpi\",\"active\":\"Profile_active__383bU\",\"menuButton\":\"Profile_menuButton__3zNDD\",\"text\":\"Profile_text__24QG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NotFound_main___vQHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemCard\":\"OrderCard_itemCard__2EsJn\",\"header\":\"OrderCard_header__1vihN\",\"name\":\"OrderCard_name__3P9nT\",\"status\":\"OrderCard_status__3t5at\",\"orderInfo\":\"OrderCard_orderInfo__3eE4T\",\"ingredients\":\"OrderCard_ingredients__25toy\",\"ingredientIcon\":\"OrderCard_ingredientIcon__1Eiwq\",\"text\":\"OrderCard_text__pbeSj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"OrdersStatistic_section__3eMGG\",\"orders\":\"OrdersStatistic_orders__3PodS\",\"column\":\"OrdersStatistic_column__3f7E4\",\"list\":\"OrdersStatistic_list__1XPRS\",\"completed\":\"OrdersStatistic_completed__MlISU\",\"inProgress\":\"OrdersStatistic_inProgress__1YQWI\",\"total\":\"OrdersStatistic_total__1a99Q\",\"count\":\"OrdersStatistic_count__PlO7E\"};","import { useState } from 'react';\n\nconst useHover = () => {\n  const [isHover, setIsHover] = useState<boolean>(false);\n\n  const onMouseEnter = () => setIsHover(true);\n  const onMouseLeave = () => setIsHover(false);\n\n  return {\n    isHover,\n    onMouseEnter,\n    onMouseLeave,\n  };\n};\n\nexport default useHover;\n","import cn from 'classnames';\nimport styles from './HeaderLink.module.css';\n\nimport { Children, isValidElement, cloneElement, FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useHover from '../../../hooks/useHover';\n\ntype THeadeLinkProps = {\n  to: string;\n  active: boolean;\n  last?: boolean;\n};\n\nconst HeaderLink: FC<THeadeLinkProps> = ({ children, to, active, last, ...props }) => {\n  const { isHover, onMouseEnter, onMouseLeave } = useHover();\n\n  const type = !isHover && !active ? 'secondary' : 'primary';\n\n  const linkClass = cn(\n    styles.link,\n    { text_color_inactive: !isHover && !active },\n    { [styles.last]: last }\n  );\n\n  return (\n    <Link\n      to={to}\n      className={linkClass}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      {...props}\n    >\n      {Children.map(children, (child) =>\n        isValidElement(child) ? cloneElement(child, { type }) : child\n      )}\n    </Link>\n  );\n};\n\nexport default HeaderLink;\n","import cn from 'classnames';\nimport styles from './AppHeader.module.css';\n\nimport { FC } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\n\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport HeaderLink from './HeaderLink/HeaderLink';\n\n\nconst AppHeader: FC = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <header className={styles.header}>\n      <nav className={cn(styles.container)}>\n        <HeaderLink to={'/'} active={pathname === '/'}>\n          <BurgerIcon type={'secondary'} /> Конструктор\n        </HeaderLink>\n\n        <HeaderLink to={'/feed'} active={pathname === '/feed'}>\n          <ListIcon type={'secondary'} /> Лента заказов\n        </HeaderLink>\n\n        <Link to={'/'} className={styles.logo}>\n          <Logo />\n        </Link>\n\n        <HeaderLink\n          to={'/profile'}\n          active={pathname === '/profile'}\n          last\n         >\n          <ProfileIcon type={'secondary'}/> Личный кабинет\n        </HeaderLink>\n      </nav>\n    </header>\n  );\n}\n\nexport default AppHeader;\n","export const itemsTypes = {\n  BUN: 'bun',\n  SAUCE: 'sauce',\n  MAIN: 'main',\n};\n\nexport const INGRIDIENTS = 'INGRIDIENTS';\nexport const TOPPINGS = 'TOPPINGS';\n","import cn from 'classnames';\nimport styles from './IngridientCard.module.css';\n\nimport { FC } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { INGRIDIENTS } from '../../../utils/constants';\nimport { TIngredient } from '../../../types/ingredientsTypes';\n\ninterface IProps {\n  item: TIngredient;\n  count: number;\n  onCardClick: () => void;\n}\n\nconst IngridientCard: FC<IProps> = ({ item, count = 0, onCardClick }) => {\n  const [{ opacity }, drag] = useDrag({\n    type: INGRIDIENTS,\n    item: { ...item },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.2 : 1,\n    }),\n  });\n\n  return (\n    <li\n      style={{ opacity }}\n      ref={drag}\n      className={cn(styles.itemCard, 'm-4', 'mr-2')}\n      onClick={onCardClick}\n    >\n      <Counter count={count} size='default' />\n      <img src={item.image} alt={item.name}></img>\n      <span className={cn(styles.price, 'text_type_digits-default')}>\n        {item.price}\n        <CurrencyIcon type='primary' />\n      </span>\n      <span className={cn(styles.name, 'text_type_main-default')}>{item.name}</span>\n    </li>\n  );\n};\n\nexport default IngridientCard;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { RootState, AppDispatch } from '../types/mainTypes';\nimport { AppThunk } from '../types/thunkTypes';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch | AppThunk>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import 'moment/locale/ru';\nimport moment from 'moment-timezone';\nimport { TIngredient } from '../types/ingredientsTypes';\nimport { TOrderItems, TTopping } from '../types/constructorTypes';\n\ntype TIngredientsByTypes = {\n  [name: string]: Array<TIngredient>;\n};\n\ntype TIngredientsWithQuantity = {\n  [name: string]: number;\n};\n\nexport const groupByType = (items: Array<TIngredient>): TIngredientsByTypes =>\n  items.reduce((acc: TIngredientsByTypes, item) => {\n    if (!acc[item.type]) {\n      acc[item.type] = [];\n    }\n    acc[item.type].push(item);\n    return acc;\n  }, {});\n\nexport const swapItems = (\n  dragIndex: number,\n  hoverIndex: number,\n  list: Array<TTopping>\n): Array<TTopping> => {\n  const dragCard = list[dragIndex];\n  const updatedList = [...list];\n  updatedList.splice(dragIndex, 1);\n  updatedList.splice(hoverIndex, 0, dragCard);\n  return updatedList;\n};\n\nexport const calculateQuantity = (orderItems: TOrderItems): TIngredientsWithQuantity => {\n  const { bun, toppings } = orderItems;\n  const allItems = bun ? [bun, bun, ...toppings] : toppings;\n  return allItems.reduce((acc: TIngredientsWithQuantity, item) => {\n    acc[item._id] ? (acc[item._id] += 1) : (acc[item._id] = 1);\n    return acc;\n  }, {});\n};\n\nexport const getOrderItemsIds = (orderItems: TOrderItems): Array<string> => {\n  const { bun, toppings } = orderItems;\n  const itemsIds = toppings.map((item) => item._id);\n  return bun ? [bun._id, ...itemsIds] : itemsIds;\n};\n\nexport const calculateTotalPrice = (orderItems: TOrderItems): number => {\n  const { bun, toppings } = orderItems;\n  return [bun, bun, ...toppings].reduce((acc: number, item) => (item ? acc + item.price : acc), 0);\n};\n\nexport const setRefreshToken = (refreshToken: string) => {\n  localStorage.setItem('refreshToken', refreshToken);\n};\n\nexport const getRefreshToken = () => localStorage.getItem('refreshToken');\nexport const removeRefreshToken = () => localStorage.removeItem('refreshToken');\n\nexport const setAccessToken = (token: string) => {\n  const accessToken = token.split('Bearer ')[1];\n  localStorage.setItem('accessToken', accessToken);\n};\n\nexport const getAccessToken = () => localStorage.getItem('accessToken');\nexport const removeAccessToken = () => localStorage.removeItem('accessToken');\n\n// export const setAccessToken = (resp) => {\n//   const accessToken = resp.accessToken.split('Bearer ')[1];\n//   setCookie('accessToken', accessToken);\n// };\n\n// export const getAccessToken = () => getCookie('accessToken');\n\n// export const removeAccessToken = () => setCookie('accessToken', null, { expires: -1 });\n\n// export function setCookie(name, value, props) {\n//   props = props || {};\n//   let exp = props.expires;\n//   if (typeof exp == 'number' && exp) {\n//     const d = new Date();\n//     d.setTime(d.getTime() + exp * 1000);\n//     exp = props.expires = d;\n//   }\n//   if (exp && exp.toUTCString) {\n//     props.expires = exp.toUTCString();\n//   }\n//   value = encodeURIComponent(value);\n//   let updatedCookie = name + '=' + value;\n//   for (const propName in props) {\n//     updatedCookie += '; ' + propName;\n//     const propValue = props[propName];\n//     if (propValue !== true) {\n//       updatedCookie += '=' + propValue;\n//     }\n//   }\n//   document.cookie = updatedCookie;\n// }\n\n// export function getCookie(name) {\n//   const matches = document.cookie.match(\n//     new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)')\n//   );\n//   return matches ? decodeURIComponent(matches[1]) : undefined;\n// }\n\nexport const getOrderStatus = (status: string): string => {\n  switch (status) {\n    case 'created':\n      return 'Создан';\n    case 'pending':\n      return 'Готовится';\n    case 'done':\n      return 'Выполнен';\n    default:\n      return 'Статус неизвестен';\n  }\n};\n\nexport const getConstructorMessage = (bun: boolean, toppingLength: boolean): string => {\n  if (!bun && !toppingLength) return 'Перетащите ингридиенты в поле ниже';\n  if (!bun && !!toppingLength) return 'Добавьте булку';\n  if (bun && !toppingLength) return 'Добавьте начинки';\n  if (bun && !!toppingLength) return 'Добавьте еще начинки или Оформите заказ';\n  return '';\n};\n\nexport const getFormattedDate = (date: string) =>\n  `${moment.tz(date, 'Europe/Moscow').calendar()} i-GMT+3`;\n","import { RootState } from '../../types/mainTypes';\n\nexport const userInfo = (state: RootState) => state.user.info;\nexport const login = (state: RootState) => state.user.login;\nexport const register = (state: RootState) => state.user.register;\nexport const profile = (state: RootState) => state.user.profile;\nexport const updateProfile = (state: RootState) => state.user.updateProfile;\nexport const forgotPassword = (state: RootState) => state.user.forgotPassword;\nexport const resetPassword = (state: RootState) => state.user.resetPassword;\n","import { RootState } from '../../types/mainTypes';\n\nexport const orderItems = (state: RootState) => ({\n  bun: state.burgerConstructor.bun,\n  toppings: state.burgerConstructor.toppings,\n});\n\nexport const orderCreate = (state: RootState) => state.burgerConstructor;\n","import { RootState } from '../../types/mainTypes';\n\nexport const items = (state: RootState) => state.burgerIngredients.items;\nexport const getItems = (state: RootState) => state.burgerIngredients;\nexport const ingredientDetails = (state: RootState) => state.burgerIngredients.itemDetails;\n","import { RootState } from '../../types/mainTypes';\n\nexport const wsAllOrders = (state: RootState) => state.orders.allOrders;\nexport const wsUserOrders = (state: RootState) => state.orders.userOrders;\nexport const orderDetails = (state: RootState) => state.orders.orederDetails.order;\n","import { TCreatedOrder } from '../types/constructorTypes';\nimport { TIngredient } from '../types/ingredientsTypes';\nimport {\n  TForgotPassword,\n  TResetPassword,\n  TUpdateUserInfo,\n  TUser,\n  TUserLogin,\n  TUserRegister,\n} from '../types/userTypes';\n\nimport {\n  getAccessToken,\n  getRefreshToken,\n  removeAccessToken,\n  removeRefreshToken,\n  setAccessToken,\n  setRefreshToken,\n} from '../utils/helpers';\n\nconst NORMA_BASE_URL = 'https://norma.nomoreparties.space/api';\nconst contentType = { 'Content-Type': 'application/json' };\n\nexport type TRequestOptions = {\n  method: string;\n  headers?: { [key: string]: string };\n  body?: string;\n};\n\nconst checkResponse = (response: any): Promise<any> =>\n  response.ok ? response.json() : response.json().then((err: any) => Promise.reject(err));\n\nconst baseFetch = async (url: string, options: TRequestOptions) => {\n  options = {\n    ...options,\n    headers: { ...(options && options.headers && options.headers), ...contentType },\n  };\n  return await fetch(`${NORMA_BASE_URL}${url}`, options).then(checkResponse);\n};\n\nconst updateRefreshToken = async (): Promise<any> =>\n  await baseFetch(`/auth/token`, {\n    method: 'POST',\n    body: JSON.stringify({ token: getRefreshToken() }),\n  });\n\nconst authFetch = async (url: string, options: TRequestOptions): Promise<any> => {\n  try {\n    options = { ...options, headers: { Authorization: `Bearer ${getAccessToken()}` } };\n    return await baseFetch(url, options);\n  } catch (error: any) {\n    // console.log('authFetch error', error);\n\n    if (error.message === 'jwt expired' || error.message === 'jwt malformed') {\n      const response = await updateRefreshToken();\n\n      setRefreshToken(response.refreshToken);\n      setAccessToken(response.accessToken);\n\n      options.headers = { Authorization: `Bearer ${getAccessToken()}` };\n      return await baseFetch(url, options);\n    } else {\n      return Promise.reject(error);\n    }\n  }\n};\n\n// const fetchAllOrders = async (): Promise<any> => await baseFetch(`/orders/all`, { method: 'GET' });\n// const fetchUserOrders = async (): Promise<any> => await authFetch(`/orders`, { method: 'GET' });\n\nconst fetchIngredients = async (): Promise<{ ingredients: Array<TIngredient> }> => {\n  const response = await baseFetch(`/ingredients`, { method: 'GET' });\n  return { ingredients: response.data };\n};\n\nconst createOrder = async (data: Array<string>): Promise<{ order: TCreatedOrder }> => {\n  const response = await authFetch(`/orders`, {\n    method: 'POST',\n    body: JSON.stringify({ ingredients: data }),\n  });\n\n  const order = { number: response.order.number, name: response.order.name };\n  return { order };\n};\n\nconst fetchUserInfo = async (): Promise<{ user: TUser }> => {\n  const response = await authFetch(`/auth/user`, { method: 'GET' });\n  return { user: response.user };\n};\n\nconst updateUserInfo = async ({\n  name,\n  email,\n  password,\n}: TUpdateUserInfo): Promise<{ user: TUser }> => {\n  const response = await authFetch(`/auth/user`, {\n    method: 'PATCH',\n    body: JSON.stringify({ name, email, password }),\n  });\n\n  return { user: response.user };\n};\n\nconst userRegister = async ({\n  name,\n  email,\n  password,\n}: TUserRegister): Promise<{ user: TUser }> => {\n  const response = await baseFetch(`/auth/register`, {\n    method: 'POST',\n    body: JSON.stringify({ name, email, password }),\n  });\n\n  // console.log('userRegister response', response);\n  setRefreshToken(response.refreshToken);\n  setAccessToken(response.accessToken);\n\n  return { user: response.user };\n};\n\nconst userLogin = async ({ email, password }: TUserLogin): Promise<{ user: TUser }> => {\n  const response = await baseFetch(`/auth/login`, {\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n  });\n\n  // console.log('userLogin response', response);\n  setRefreshToken(response.refreshToken);\n  setAccessToken(response.accessToken);\n\n  return { user: response.user };\n};\n\nconst userLogout = async (): Promise<any> => {\n  await baseFetch(`/auth/logout`, {\n    method: 'POST',\n    body: JSON.stringify({ token: getRefreshToken() }),\n  });\n\n  // console.log('userLogout response', response);\n  removeRefreshToken();\n  removeAccessToken();\n};\n\nconst forgotPassword = async ({ email }: TForgotPassword): Promise<any> =>\n  await baseFetch(`/password-reset`, {\n    method: 'POST',\n    body: JSON.stringify({ email }),\n  });\n\nconst resetPassword = async ({ password, token }: TResetPassword): Promise<any> =>\n  await baseFetch(`/password-reset/reset`, {\n    method: 'POST',\n    body: JSON.stringify({ password, token }),\n  });\n\nconst normaService = {\n  // fetchAllOrders,\n  // fetchUserOrders,\n  fetchIngredients,\n  createOrder,\n  userRegister,\n  userLogin,\n  userLogout,\n  forgotPassword,\n  resetPassword,\n  updateRefreshToken,\n  fetchUserInfo,\n  updateUserInfo,\n};\n\nexport default normaService;\n","// ingredients;\n\nexport const INGREDIENTS_REQUEST = 'INGREDIENTS_REQUEST' as const;\nexport const INGREDIENTS_SUCCESS = 'INGREDIENTS_SUCCESS' as const;\nexport const INGREDIENTS_ERROR = 'INGREDIENTS_ERROR' as const;\nexport const SET_INGREDIENT_DETAILS = 'SET_INGREDIENT_DETAILS' as const;\nexport const RESET_INGREDIENT_DETAILS = 'RESET_INGREDIENT_DETAILS' as const;\n\n// constructor;\n\nexport const ADD_BUN = 'ADD_BUN' as const;\nexport const ADD_TOPPING = 'ADD_TOPPING' as const;\nexport const DELETE_TOPPING = 'DELETE_TOPPING' as const;\nexport const UPDATE_TOPPINGS_LIST = 'UPDATE_TOPPINGS_LIST' as const;\nexport const CLEAR_ORDER_ITEMS = 'CLEAR_ORDER_ITEMS' as const;\nexport const ORDER_REQUEST = 'ORDER_REQUEST' as const;\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS' as const;\nexport const ORDER_ERROR = 'ORDER_ERROR' as const;\nexport const CLOSE_ORDER_CREATE_DETAILS = 'CLOSE_ORDER_CREATE_DETAILS' as const;\n\n// USER_CHECK_AUTH\n\nexport const USER_CHECK_AUTH_FAIL = 'USER_CHECK_AUTH_FAIL' as const;\n\nexport const USER_CHECK_AUTH_REQUEST = 'USER_CHECK_AUTH_REQUEST' as const;\nexport const USER_CHECK_AUTH_SUCCESS = 'USER_CHECK_AUTH_SUCCESS' as const;\nexport const USER_CHECK_AUTH_ERROR = 'USER_CHECK_AUTH_ERROR' as const;\n\n// USER_LOGIN\n\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST' as const;\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS' as const;\nexport const USER_LOGIN_ERROR = 'USER_LOGIN_ERROR' as const;\n\nexport const userLoginMap = {\n  request: USER_LOGIN_REQUEST,\n  success: USER_LOGIN_SUCCESS,\n  error: USER_LOGIN_ERROR,\n};\n\n// USER_LOGOUT\n\nexport const USER_LOGOUT_REQUEST = 'USER_LOGOUT_REQUEST' as const;\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS' as const;\nexport const USER_LOGOUT_ERROR = 'USER_LOGOUT_ERROR' as const;\n\nexport const userLogoutMap = {\n  request: USER_LOGOUT_REQUEST,\n  success: USER_LOGOUT_SUCCESS,\n  error: USER_LOGOUT_ERROR,\n} as const;\n\n// USER_REGISTER\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST' as const;\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS' as const;\nexport const USER_REGISTER_ERROR = 'USER_REGISTER_ERROR' as const;\n\nexport const userRegisterMap = {\n  request: USER_REGISTER_REQUEST,\n  success: USER_REGISTER_SUCCESS,\n  error: USER_REGISTER_ERROR,\n} as const;\n\n// USER_PROFILE\n\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST' as const;\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS' as const;\nexport const USER_PROFILE_ERROR = 'USER_PROFILE_ERROR' as const;\n\nexport const userProfileMap = {\n  request: USER_PROFILE_REQUEST,\n  success: USER_PROFILE_SUCCESS,\n  error: USER_PROFILE_ERROR,\n} as const;\n\n// USER_UPDATE_PROFILE\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST' as const;\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS' as const;\nexport const USER_UPDATE_PROFILE_ERROR = 'USER_UPDATE_PROFILE_ERROR' as const;\n\nexport const userUpdateProfileMap = {\n  request: USER_UPDATE_PROFILE_REQUEST,\n  success: USER_UPDATE_PROFILE_SUCCESS,\n  error: USER_UPDATE_PROFILE_ERROR,\n} as const;\n\n// USER_FORGOT_PASSWORD\n\nexport const USER_FORGOT_PASSWORD_REQUEST = 'USER_FORGOT_PASSWORD_REQUEST' as const;\nexport const USER_FORGOT_PASSWORD_SUCCESS = 'USER_FORGOT_PASSWORD_SUCCESS' as const;\nexport const USER_FORGOT_PASSWORD_ERROR = 'USER_FORGOT_PASSWORD_ERROR' as const;\n\nexport const userForgotPasswordMap = {\n  request: USER_FORGOT_PASSWORD_REQUEST,\n  success: USER_FORGOT_PASSWORD_SUCCESS,\n  error: USER_FORGOT_PASSWORD_ERROR,\n} as const;\n\n// USER_RESET_PASSWORD\n\nexport const USER_RESET_PASSWORD_REQUEST = 'USER_RESET_PASSWORD_REQUEST' as const;\nexport const USER_RESET_PASSWORD_SUCCESS = 'USER_RESET_PASSWORD_SUCCESS' as const;\nexport const USER_RESET_PASSWORD_ERROR = 'USER_RESET_PASSWORD_ERROR' as const;\n\nexport const userResetPasswordMap = {\n  request: USER_RESET_PASSWORD_REQUEST,\n  success: USER_RESET_PASSWORD_SUCCESS,\n  error: USER_RESET_PASSWORD_ERROR,\n} as const;\n\n// ws all orders\nexport const WS_ALL_ORDERS_CONNECTION_START = 'WS_ALL_ORDERS_CONNECTION_START' as const;\nexport const WS_ALL_ORDERS_CONNECTION_FINISH = 'WS_ALL_ORDERS_CONNECTION_FINISH' as const;\n\nexport const WS_ALL_ORDERS_CONNECTION_SUCCESS = 'WS_ALL_ORDERS_CONNECTION_SUCCESS' as const;\nexport const WS_ALL_ORDERS_CONNECTION_ERROR = 'WS_ALL_ORDERS_CONNECTION_ERROR' as const;\nexport const WS_ALL_ORDERS_CONNECTION_CLOSED = 'WS_ALL_ORDERS_CONNECTION_CLOSED' as const;\n\nexport const WS_GET_ALL_ORDERS = 'WS_GET_ALL_ORDERS' as const;\n\nexport const SET_ORDER_DETAILS = 'SET_ORDERS_DETAILS' as const;\nexport const RESET_ORDER_DETAILS = 'RESET_ORDERS_DETAILS' as const;\n\nexport const wsAllOrdersActions = {\n  wsInit: WS_ALL_ORDERS_CONNECTION_START,\n  wsClose: WS_ALL_ORDERS_CONNECTION_FINISH,\n  onOpen: WS_ALL_ORDERS_CONNECTION_SUCCESS,\n  onError: WS_ALL_ORDERS_CONNECTION_ERROR,\n  onClose: WS_ALL_ORDERS_CONNECTION_CLOSED,\n  onMessage: WS_GET_ALL_ORDERS,\n} as const;\n\n// ws user orders\nexport const WS_USER_ORDERS_CONNECTION_START = 'WS_USER_ORDERS_CONNECTION_START' as const;\nexport const WS_USER_ORDERS_CONNECTION_FINISH = 'WS_USER_ORDERS_CONNECTION_FINISH' as const;\n\nexport const WS_USER_ORDERS_CONNECTION_SUCCESS = 'WS_USER_ORDERS_CONNECTION_SUCCESS' as const;\nexport const WS_USER_ORDERS_CONNECTION_ERROR = 'WS_USER_ORDERS_CONNECTION_ERROR' as const;\nexport const WS_USER_ORDERS_CONNECTION_CLOSED = 'WS_USER_ORDERS_CONNECTION_CLOSED' as const;\n\nexport const WS_GET_USER_ORDERS = 'WS_GET_USER_ORDERS' as const;\n\nexport const wsUserOrdersActions = {\n  wsInit: WS_USER_ORDERS_CONNECTION_START,\n  wsClose: WS_USER_ORDERS_CONNECTION_FINISH,\n  onOpen: WS_USER_ORDERS_CONNECTION_SUCCESS,\n  onError: WS_USER_ORDERS_CONNECTION_ERROR,\n  onClose: WS_USER_ORDERS_CONNECTION_CLOSED,\n  onMessage: WS_GET_USER_ORDERS,\n} as const;\n","import normaService from '../../services/normaService';\nimport { AppThunk } from '../../types/thunkTypes';\nimport { AppDispatch } from '../../types/mainTypes';\nimport * as types from '../constants/constants';\nimport {\n  TIngredient,\n  TResetIngredientDetails,\n  TSetIngredientDetails,\n} from '../../types/ingredientsTypes';\n\nexport const setIngredientDetails = (data: TIngredient): TSetIngredientDetails => ({\n  type: types.SET_INGREDIENT_DETAILS,\n  payload: data,\n});\n\nexport const resetIngredientDetails = (): TResetIngredientDetails => ({\n  type: types.RESET_INGREDIENT_DETAILS,\n});\n\nexport const getIngredients: AppThunk = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch({ type: types.INGREDIENTS_REQUEST });\n    const { ingredients } = await normaService.fetchIngredients();\n    dispatch({ type: types.INGREDIENTS_SUCCESS, payload: ingredients });\n  } catch (error) {\n    dispatch({ type: types.INGREDIENTS_ERROR, error: { message: 'Network error' } });\n  }\n};\n","import cn from 'classnames';\nimport styles from './BurgerIngredients.module.css';\n\nimport { useState, useRef, useMemo, FC } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport IngridientCard from './IngridientCard/IngridientCard';\n\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\nimport { useScroll } from '../../hooks/useScroll';\nimport { itemsTypes } from '../../utils/constants';\nimport { calculateQuantity, groupByType } from '../../utils/helpers';\nimport { constructorSelectors, ingredientsSelectors } from '../../redux/selectors';\nimport { TIngredient } from '../../types/ingredientsTypes';\nimport { setIngredientDetails } from '../../redux/actions/ingredientsActions';\n\nconst ingredientsGroups = [\n  { type: 'bun', title: 'Булки' },\n  { type: 'sauce', title: 'Соусы' },\n  { type: 'main', title: 'Начинки' },\n];\n\ntype TTargets = {\n  [name: string]: HTMLElement;\n};\n\nconst BurgerIngredients: FC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  const ingredients = useAppSelector(ingredientsSelectors.items);\n  const orderItems = useAppSelector(constructorSelectors.orderItems);\n\n  const ingredientsByType = useMemo(() => groupByType(ingredients), [ingredients]);\n  const quantity = useMemo(() => calculateQuantity(orderItems), [orderItems]);\n\n  const [currentTab, setCurrentTab] = useState(itemsTypes.BUN);\n\n  const containerRef = useRef<HTMLUListElement>(null);\n  const targetsRefs = useRef<TTargets>({});\n\n  useScroll(containerRef, targetsRefs, (entry: any) => setCurrentTab(entry.target.dataset.type));\n\n  const handleTabClick = (tab: string) => {\n    setCurrentTab(tab);\n\n    const container = containerRef.current;\n    const target = targetsRefs.current[tab];\n\n    if (target && container) {\n      container.scrollTo({\n        top: target.offsetTop - container.offsetTop,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const handleCardClick = (item: TIngredient) => () => {\n    dispatch(setIngredientDetails(item));\n\n    history.push({\n      pathname: `/ingredients/${item._id}`,\n      state: { background: location },\n    });\n  };\n\n  const ref = (type: string) => (el: HTMLHeadingElement) => {\n    targetsRefs.current[type] = el;\n  };\n\n  return (\n    <section className={cn(styles.section)}>\n      <ul className={cn(styles.tabs)}>\n        {ingredientsGroups.map(({ type, title }) => (\n          <li key={type}>\n            <Tab value={type} active={currentTab === type} onClick={handleTabClick}>\n              {title}\n            </Tab>\n          </li>\n        ))}\n      </ul>\n\n      <ul ref={containerRef} className={cn(styles.ingredientsList)}>\n        {ingredientsGroups.map(({ type, title }) => (\n          <li key={type}>\n            <h2\n              ref={ref(type)}\n              data-type={type}\n              className={cn(styles.ingredientsGroupTitle, 'text', 'text_type_main-medium')}\n            >\n              {title}\n            </h2>\n            <ul className={cn(styles.ingredientsGroup)}>\n              {ingredientsByType[type].map((item: TIngredient) => {\n                return (\n                  <IngridientCard\n                    key={item._id}\n                    count={quantity[item._id]}\n                    item={item}\n                    onCardClick={handleCardClick(item)}\n                  />\n                );\n              })}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default BurgerIngredients;\n","import { useEffect } from 'react';\n\ntype TTargets = {\n  [name: string]: HTMLElement | null;\n};\n\nexport const useScroll = (\n  containerRef: { current: HTMLUListElement | null },\n  targetsRefs: { current: TTargets },\n  callback: (entry: any) => void\n) => {\n  useEffect(() => {\n    const targets = Object.values(targetsRefs.current);\n\n    const options = {\n      root: containerRef.current,\n      rootMargin: '0px 0px -80% 0px',\n      threshold: 0.5,\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          callback(entry);\n        }\n      });\n    }, options);\n\n    targets.forEach((el) => observer.observe(el as HTMLElement));\n\n    return () => {\n      targets.forEach((el) => observer.unobserve(el as HTMLElement));\n    };\n  }, [containerRef, targetsRefs, callback]);\n};\n","import { FC, MouseEvent } from 'react';\n\nimport styles from './ModalOverlay.module.css';\n\ninterface IProps {\n  onClick: (e: MouseEvent) => void;\n}\n\nconst ModalOverlay: FC<IProps> = ({ children, onClick }) => {\n  return (\n    <div onClick={onClick} className={styles.overlay}>\n      {children}\n    </div>\n  );\n};\n\nexport default ModalOverlay;\n","import styles from './Modal.module.css';\nimport cn from 'classnames';\n\nimport { FC, MouseEvent, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ModalOverlay from './ModalOverlay/ModalOverlay';\n\nimport useHover from '../../hooks/useHover';\n\ninterface IModalProps {\n  children: React.ReactNode;\n  title?: string;\n  largeTitle?: boolean;\n  onClose: () => void;\n}\n\nconst Modal: FC<IModalProps> = ({ children, onClose, title, largeTitle }) => {\n  const modalRoot = document.getElementById('modals') as HTMLElement;\n\n  const { isHover, onMouseEnter, onMouseLeave } = useHover();\n\n  const handleClickOnOverlay = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  useEffect(() => {\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (e.code === 'Escape') onClose();\n    };\n\n    // document.body.style.paddingRight = '8px';\n    document.body.style.overflow = 'hidden';\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      // document.body.style.paddingRight = '0px';\n      document.body.style.overflow = 'unset';\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [onClose]);\n\n  const titleStyle = largeTitle\n    ? cn(styles.largeTitle, 'text', 'text_type_main-large')\n    : cn(styles.title, 'text', 'text_type_digits-default');\n\n  return ReactDOM.createPortal(\n    <ModalOverlay onClick={handleClickOnOverlay}>\n      <div className={cn(styles.modal)}>\n        <span\n          onClick={onClose}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          className={styles.closeIcon}\n        >\n          <CloseIcon type={isHover ? 'primary' : 'secondary'} />\n        </span>\n        {title ? (\n          <span className={titleStyle}>{title}</span>\n        ) : (\n          <span className={styles.emptyTitle}> </span>\n        )}\n        {children}\n      </div>\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/done.887b83be.gif\";","import cn from 'classnames';\nimport styles from './OrderCreateDetails.module.css';\n\nimport { FC } from 'react';\n\nimport done from '../../images/done.gif';\n\ninterface IProps {\n  orderNumber: string;\n}\n\nconst OrderCreateDetails: FC<IProps> = ({ orderNumber }) => {\n  return (\n    <section className={cn(styles.container, 'text_type_main-default')}>\n      <span className={cn(styles.number, 'text_type_digits-large')}>{orderNumber}</span>\n      <span className={cn(styles.textNumber, 'text_type_main-medium')}>идентификатор заказа</span>\n      <img src={done} alt={'done'} />\n      <span className={cn(styles.textStart)}>Ваш заказ начали готовить</span>\n      <span className={cn(styles.textWait, 'text_color_inactive')}>\n        Дождитесь готовности на орбитальной станции\n      </span>\n    </section>\n  );\n};\n\nexport default OrderCreateDetails;\n","import cn from 'classnames';\nimport styles from './ToppingCard.module.css';\n\nimport { FC, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { TOPPINGS } from '../../../utils/constants';\nimport { TTopping } from '../../../types/constructorTypes';\n\ninterface IProps {\n  item: TTopping;\n  index: number;\n  handleMoveCard: (dragIndex: number, hoverIndex: number) => void;\n  handleDeleteCard: (uuid: string) => void;\n}\n\nconst ToppingCard: FC<IProps> = ({ item, index, handleMoveCard, handleDeleteCard }) => {\n  const ref = useRef<HTMLLIElement>(null);\n\n  const [{ opacity }, drop] = useDrop({\n    accept: TOPPINGS,\n    collect: (monitor) => ({\n      opacity: monitor.isOver() ? 0 : 1,\n    }),\n    hover(item: { id: string; index: number }) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      handleMoveCard(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [, drag] = useDrag({\n    type: TOPPINGS,\n    item: { ...item, index },\n  });\n\n  drag(drop(ref));\n\n  return (\n    <li style={{ opacity }} ref={ref} draggable className={cn(styles.item)}>\n      <DragIcon type='primary' />\n      <ConstructorElement\n        text={item.name}\n        price={item.price}\n        thumbnail={item.image}\n        handleClose={() => handleDeleteCard(item.uuid)}\n      />\n    </li>\n  );\n};\n\nexport default ToppingCard;\n","import cn from 'classnames';\nimport styles from './BunCard.module.css';\n\nimport { FC } from 'react';\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TIngredient } from '../../../types/ingredientsTypes';\n\ninterface IProps {\n  item: TIngredient;\n  top?: boolean;\n}\n\nconst BunCard: FC<IProps> = ({ item, top }) => {\n  const { name, price, image } = item;\n  return (\n    <div className={cn(styles.bun)}>\n      <ConstructorElement\n        type={top ? 'top' : 'bottom'}\n        isLocked={true}\n        text={`${name} ${top ? '(верх)' : '(низ)'}`}\n        price={price}\n        thumbnail={image}\n      />\n    </div>\n  );\n};\n\nexport default BunCard;\n","import styles from './Loader.module.css';\nimport { FC } from 'react';\n\ntype TLoaderProps = {\n  height?: string;\n};\n\nconst Loader: FC<TLoaderProps> = ({ height }) => {\n  return (\n    <div style={{ height }} className={styles.container}>\n      <div className={styles.ldsDualRing}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import styles from './Message.module.css';\nimport { FC } from 'react';\n\ntype TMessageProps = {\n  message: string;\n  height?: string;\n};\n\nconst Message: FC<TMessageProps> = ({ message, height }) => {\n  return (\n    <div style={{ height }} className={styles.container}>\n      <div className={styles.message}>{message}</div>\n    </div>\n  );\n};\n\nexport default Message;\n","import normaService from '../../services/normaService';\nimport { AppThunk } from '../../types/thunkTypes';\nimport { AppDispatch } from '../../types/mainTypes';\nimport * as types from '../constants/constants';\nimport {\n  TAddBun,\n  TAddTopping,\n  TClearOrderItems,\n  TCloseCreateOrderDetails,\n  TTopping,\n} from '../../types/constructorTypes';\nimport { TIngredient } from '../../types/ingredientsTypes';\n\nexport const addBun = (item: TIngredient): TAddBun => ({\n  type: types.ADD_BUN,\n  payload: item,\n});\n\nexport const addTopping = (item: TTopping): TAddTopping => ({\n  type: types.ADD_TOPPING,\n  payload: item,\n});\n\nexport const deleteTopping = (uuid: string) => ({\n  type: types.DELETE_TOPPING,\n  payload: uuid,\n});\n\nexport const updateToppingsList = (list: Array<TTopping>) => ({\n  type: types.UPDATE_TOPPINGS_LIST,\n  payload: list,\n});\n\nexport const clearOrderItems = (): TClearOrderItems => ({\n  type: types.CLEAR_ORDER_ITEMS,\n});\n\nexport const closeCreateOrderDetails = (): TCloseCreateOrderDetails => ({\n  type: types.CLOSE_ORDER_CREATE_DETAILS,\n});\n\nexport const createOrder: AppThunk =\n  (itemsIds: Array<string>) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch({ type: types.ORDER_REQUEST });\n      const { order } = await normaService.createOrder(itemsIds);\n      dispatch({ type: types.ORDER_SUCCESS, payload: order });\n    } catch (err) {\n      dispatch({ type: types.ORDER_ERROR, error: { message: 'Network error' } });\n    }\n  };\n","import cn from 'classnames';\nimport styles from './BurgerConstructor.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { FC, useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDrop } from 'react-dnd';\n\nimport { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport Modal from '../Modal/Modal';\nimport OrderCreateDetails from '../OrderCreateDetails/OrderCreateDetails';\nimport ToppingCard from './ToppingCard/ToppingCard';\nimport BunCard from './BunCard/BunCard';\nimport Loader from '../UI/Loader/Loader';\nimport Message from '../UI/Message/Message';\n\nimport {\n  addBun,\n  addTopping,\n  deleteTopping,\n  updateToppingsList,\n  clearOrderItems,\n  createOrder,\n  closeCreateOrderDetails,\n} from '../../redux/actions/constructorActions';\n\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\nimport { constructorSelectors, userSelectors } from '../../redux/selectors';\nimport { INGRIDIENTS, itemsTypes } from '../../utils/constants';\nimport {\n  calculateTotalPrice,\n  getConstructorMessage,\n  getOrderItemsIds,\n  swapItems,\n} from '../../utils/helpers';\nimport { TTopping } from '../../types/constructorTypes';\nimport { TIngredient } from '../../types/ingredientsTypes';\n\nconst BurgerConstructor: FC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  const { isAuth } = useAppSelector(userSelectors.userInfo);\n  const orderItems = useAppSelector(constructorSelectors.orderItems);\n  const { visible, loading, error, order } = useAppSelector(constructorSelectors.orderCreate);\n  const { bun, toppings } = orderItems;\n\n  const orderItemsIds = useMemo(() => getOrderItemsIds(orderItems), [orderItems]);\n  const orderTotalPrice = useMemo(() => calculateTotalPrice(orderItems), [orderItems]);\n\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: INGRIDIENTS,\n    collect: (monitor) => ({\n      isHover: monitor.isOver(),\n    }),\n    drop(item: TIngredient) {\n      item.type === itemsTypes.BUN\n        ? dispatch(addBun(item))\n        : dispatch(addTopping({ ...item, uuid: uuidv4() }));\n    },\n  });\n\n  const handleCreateOrder = () => {\n    if (!bun || !toppings.length || loading) return;\n    isAuth\n      ? dispatch(createOrder(orderItemsIds))\n      : history.push({ pathname: `/login`, state: { from: location } });\n  };\n\n  const handleCloseModal = () => {\n    dispatch(closeCreateOrderDetails());\n    !error && dispatch(clearOrderItems());\n  };\n\n  const handleClearOrderItems = () => {\n    dispatch(clearOrderItems());\n  };\n\n  const handleDeleteCard = (uuid: string) => {\n    dispatch(deleteTopping(uuid));\n  };\n\n  const handleMoveCard = useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const updatedToppings = swapItems(dragIndex, hoverIndex, toppings);\n      dispatch(updateToppingsList(updatedToppings));\n    },\n    [dispatch, toppings]\n  );\n\n  return (\n    <section className={cn(styles.section)}>\n      {visible && (\n        <Modal onClose={handleCloseModal}>\n          {error && <Message message={error.message} />}\n          {order && <OrderCreateDetails orderNumber={order.number} />}\n        </Modal>\n      )}\n\n      <div className={cn(styles.header)}>\n        <p>{getConstructorMessage(!!bun, !!toppings.length)}</p>\n        {(bun || !!toppings.length) && (\n          <button\n            disabled={loading}\n            className={cn(styles.clearBtn)}\n            onClick={handleClearOrderItems}\n          >\n            Очистить\n          </button>\n        )}\n      </div>\n\n      {loading && (\n        <div className={styles.loader}>\n          <Loader />\n        </div>\n      )}\n\n      <div\n        ref={dropTarget}\n        className={cn(styles.dropTarget, `${isHover && styles.dropTargetHover}`)}\n      >\n        {bun && <BunCard item={bun} top />}\n\n        <ul className={cn(styles.itemsBox)}>\n          {toppings.map((item: TTopping, index: number) => (\n            <ToppingCard\n              key={item.uuid}\n              item={item}\n              index={index}\n              handleMoveCard={handleMoveCard}\n              handleDeleteCard={handleDeleteCard}\n            />\n          ))}\n        </ul>\n\n        {bun && <BunCard item={bun} />}\n      </div>\n\n      <div className={cn(styles.total, 'text_type_digits-medium')}>\n        <span className={'mr-10'}>\n          {orderTotalPrice}\n          <CurrencyIcon type='primary' />\n        </span>\n        <Button onClick={handleCreateOrder} type='primary' size='large'>\n          {loading ? 'Оформляем..' : 'Оформить заказ'}\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default BurgerConstructor;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport cn from 'classnames';\nimport styles from './Home.module.css';\n\nimport { FC, useEffect } from 'react';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nimport BurgerIngredients from '../../components/BurgerIngredients/BurgerIngredients';\nimport BurgerConstructor from '../../components/BurgerConstructor/BurgerConstructor';\nimport Loader from '../../components/UI/Loader/Loader';\nimport Message from '../../components/UI/Message/Message';\n\nimport { getIngredients } from '../../redux/actions/ingredientsActions';\nimport { ingredientsSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst Home: FC = () => {\n  const dispatch = useAppDispatch();\n  const { loading, success, error } = useAppSelector(ingredientsSelectors.getItems);\n\n  useEffect(() => {\n    !success && dispatch(getIngredients());\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {loading && <Loader height='300px' />}\n      {error && <Message message={error.message} />}\n      {success && (\n        <>\n          <h1 className={cn(styles.title, 'text', 'text_type_main-large')}>Соберите бургер</h1>\n          <div className={cn(styles.constructor)}>\n            <DndProvider backend={HTML5Backend}>\n              <BurgerIngredients />\n              <BurgerConstructor />\n            </DndProvider>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import cn from 'classnames';\nimport styles from './FormContainer.module.css';\n\nimport { FC } from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nconst FormContainer: FC<IProps> = ({ children, title }) => {\n  return (\n    <div className={styles.container}>\n      <h1 className={cn(styles.title, 'text', 'text_type_main-medium')}>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default FormContainer;\n","import { useState, useRef, ChangeEvent } from 'react';\n\nconst useInput = (initValue: string) => {\n  const [value, setValue] = useState(initValue);\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setValue(value);\n  };\n\n  return {\n    ref,\n    value,\n    onChange,\n  };\n};\n\nexport default useInput;\n","import { useState, useRef, ChangeEvent, MouseEvent } from 'react';\n\nconst usePasswordInput = (initValue: string) => {\n  const [showText, setShowText] = useState(false);\n  const [value, setValue] = useState(initValue);\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  const onIconClick = (e: MouseEvent) => {\n    setShowText(!showText);\n\n    setTimeout(() => {\n      if (ref && ref.current) {\n        ref.current.focus();\n      }\n    }, 0);\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setValue(value);\n  };\n\n  return {\n    showText,\n    onIconClick,\n    onChange,\n    ref,\n    value,\n  };\n};\n\nexport default usePasswordInput;\n","import cn from 'classnames';\nimport styles from './Login.module.css';\n\nimport { FC, FormEvent, useEffect } from 'react';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport useInput from '../../hooks/useInput';\nimport usePasswordInput from '../../hooks/usePasswordInput';\nimport { userLogin } from '../../redux/actions/userActions';\nimport { userSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\ninterface ILocationState {\n  from: { pathname: string };\n}\n\nconst Login: FC = () => {\n  const dispatch = useAppDispatch();\n  const { state } = useLocation<ILocationState>();\n\n  const { isAuth } = useAppSelector(userSelectors.userInfo);\n  const { loading, success, error } = useAppSelector((state) => state.user.login);\n\n  const emailInput = useInput('');\n  const passInput = usePasswordInput('');\n\n  useEffect(() => {\n    if (emailInput.ref && emailInput.ref.current) {\n      emailInput.ref.current.focus();\n    }\n  }, [emailInput.ref]);\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // todo: validate inputs\n    dispatch(userLogin({ email: emailInput.value, password: passInput.value }));\n  };\n\n  if (isAuth) {\n    return <Redirect to={state?.from || '/'} />;\n  }\n\n  return (\n    <FormContainer title='Вход'>\n      <form className={cn(styles.form)} onSubmit={submitHandler}>\n        <Input\n          onChange={emailInput.onChange}\n          value={emailInput.value}\n          ref={emailInput.ref}\n          type='email'\n          disabled={loading}\n          error={!!error}\n          name='email'\n          placeholder='E-mail'\n        />\n        <Input\n          onChange={passInput.onChange}\n          value={passInput.value}\n          ref={passInput.ref}\n          type={passInput.showText ? 'text' : 'password'}\n          disabled={loading}\n          error={!!error}\n          name='password'\n          placeholder='Пароль'\n          icon={passInput.showText ? 'HideIcon' : 'ShowIcon'}\n          onIconClick={passInput.onIconClick}\n        />\n        <Button>Войти</Button>\n\n        {loading && 'Loading...'}\n        {success && 'Success'}\n        {error && error.message}\n      </form>\n\n      <span className={cn(styles.text, 'text_color_inactive')}>\n        Вы — новый пользователь?{' '}\n        <Link className={styles.link} to='/register'>\n          Зарегистрироваться\n        </Link>\n      </span>\n      <span className={cn(styles.text, 'text_color_inactive')}>\n        Забыли пароль?{' '}\n        <Link className={styles.link} to='/forgot-password'>\n          Восстановить пароль\n        </Link>\n      </span>\n    </FormContainer>\n  );\n};\n\nexport default Login;\n","import normaService from '../../services/normaService';\nimport { AppThunk } from '../../types/thunkTypes';\nimport { AppDispatch } from '../../types/mainTypes';\nimport * as types from '../constants/constants';\n\nimport {\n  TForgotPassword,\n  TResetPassword,\n  TUpdateUserInfo,\n  TUserCheckAuthFail,\n  TUserLogin,\n  TUserRegister,\n} from '../../types/userTypes';\n\nexport const userAuthFail = (): TUserCheckAuthFail => ({\n  type: types.USER_CHECK_AUTH_FAIL,\n});\n\nexport const checkUserAuth: AppThunk = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch({ type: types.USER_CHECK_AUTH_REQUEST });\n    const response = await normaService.fetchUserInfo();\n    dispatch({ type: types.USER_CHECK_AUTH_SUCCESS, payload: response.user });\n  } catch (error) {\n    dispatch({ type: types.USER_CHECK_AUTH_ERROR, error: { message: 'Network error' } });\n  }\n};\n\nexport const userRegister: AppThunk =\n  ({ name, email, password }: TUserRegister) =>\n  async (dispatch: AppDispatch) => {\n    try {\n      dispatch({ type: types.USER_REGISTER_REQUEST });\n      const { user } = await normaService.userRegister({ name, email, password });\n      dispatch({ type: types.USER_REGISTER_SUCCESS, payload: user });\n    } catch (error) {\n      // console.log('userRegister error', error);\n      dispatch({ type: types.USER_REGISTER_ERROR, error: { message: 'Network error' } });\n    }\n  };\n\nexport const userLogin: AppThunk =\n  ({ email, password }: TUserLogin) =>\n  async (dispatch: AppDispatch) => {\n    try {\n      dispatch({ type: types.USER_LOGIN_REQUEST });\n      const { user } = await normaService.userLogin({ email, password });\n      dispatch({ type: types.USER_LOGIN_SUCCESS, payload: user });\n    } catch (error) {\n      // console.log('userLogin error', error);\n      dispatch({ type: types.USER_LOGIN_ERROR, error: { message: 'Network error' } });\n    }\n  };\n\nexport const userLogout: AppThunk = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch({ type: types.USER_LOGOUT_REQUEST });\n    await normaService.userLogout();\n    dispatch({ type: types.USER_LOGOUT_SUCCESS });\n  } catch (error) {\n    // console.log('userLogout error', error);\n    dispatch({ type: types.USER_LOGOUT_ERROR, error: { message: 'Network error' } });\n  }\n};\n\nexport const getUserInfo: AppThunk = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch({ type: types.USER_PROFILE_REQUEST });\n    const { user } = await normaService.fetchUserInfo();\n    dispatch({ type: types.USER_PROFILE_SUCCESS, payload: user });\n  } catch (error) {\n    // console.log('getUserInfo error', error);\n    dispatch({ type: types.USER_PROFILE_ERROR, error: { message: 'Network error' } });\n  }\n};\n\nexport const updateUserInfo: AppThunk =\n  ({ name, email, password }: TUpdateUserInfo) =>\n  async (dispatch: AppDispatch) => {\n    try {\n      dispatch({ type: types.USER_UPDATE_PROFILE_REQUEST });\n      const { user } = await normaService.updateUserInfo({ name, email, password });\n      dispatch({ type: types.USER_UPDATE_PROFILE_SUCCESS, payload: user });\n    } catch (error) {\n      // console.log('updateUserInfo error', error);\n      dispatch({ type: types.USER_UPDATE_PROFILE_ERROR, error: { message: 'Network error' } });\n    }\n  };\n\nexport const forgotUserPassword: AppThunk =\n  ({ email }: TForgotPassword) =>\n  async (dispatch: AppDispatch) => {\n    try {\n      dispatch({ type: types.USER_FORGOT_PASSWORD_REQUEST });\n      await normaService.forgotPassword({ email });\n\n      // console.log('forgotUserPassword response', response);\n      localStorage.setItem('resetEmailSent', 'true');\n\n      dispatch({ type: types.USER_FORGOT_PASSWORD_SUCCESS });\n    } catch (error) {\n      // console.log('forgotUserPassword error', error);\n      dispatch({ type: types.USER_FORGOT_PASSWORD_ERROR, error: { message: 'Network error' } });\n    }\n  };\n\nexport const resetUserPassword: AppThunk =\n  ({ password, token }: TResetPassword) =>\n  async (dispatch: AppDispatch) => {\n    try {\n      dispatch({ type: types.USER_RESET_PASSWORD_REQUEST });\n      await normaService.resetPassword({ password, token });\n\n      // console.log('resetUserPassword response', response);\n      localStorage.removeItem('resetEmailSent');\n\n      dispatch({ type: types.USER_RESET_PASSWORD_SUCCESS });\n    } catch (error) {\n      // console.log('resetUserPassword error', error);\n      dispatch({ type: types.USER_RESET_PASSWORD_ERROR, error: { message: 'Network error' } });\n    }\n  };\n","import cn from 'classnames';\nimport styles from './Register.module.css';\n\nimport { FC, FormEvent, useEffect } from 'react';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport useInput from '../../hooks/useInput';\nimport usePasswordInput from '../../hooks/usePasswordInput';\nimport { userRegister } from '../../redux/actions/userActions';\nimport { userSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\ninterface ILocationState {\n  from: { pathname: string };\n}\n\nconst Register: FC = () => {\n  const dispatch = useAppDispatch();\n  const { state } = useLocation<ILocationState>();\n\n  const { isAuth } = useAppSelector(userSelectors.userInfo);\n  const { loading, success, error } = useAppSelector(userSelectors.register);\n\n  const nameInput = useInput('');\n  const emailInput = useInput('');\n  const passInput = usePasswordInput('');\n\n  useEffect(() => {\n    if (nameInput.ref && nameInput.ref.current) {\n      nameInput.ref.current.focus();\n    }\n  }, [nameInput.ref]);\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // todo: validate inputs\n    dispatch(\n      userRegister({\n        name: nameInput.value,\n        email: emailInput.value,\n        password: passInput.value,\n      })\n    );\n  };\n\n  if (isAuth) {\n    return <Redirect to={state?.from || '/'} />;\n  }\n\n  return (\n    <FormContainer title='Регистрация'>\n      <form className={cn(styles.form)} onSubmit={submitHandler}>\n        <Input\n          onChange={nameInput.onChange}\n          value={nameInput.value}\n          ref={nameInput.ref}\n          disabled={loading}\n          error={!!error}\n          type='text'\n          name='name'\n          placeholder='Имя'\n        />\n        <Input\n          onChange={emailInput.onChange}\n          value={emailInput.value}\n          ref={emailInput.ref}\n          disabled={loading}\n          error={!!error}\n          type='email'\n          name='email'\n          placeholder='E-mail'\n        />\n        <Input\n          onChange={passInput.onChange}\n          value={passInput.value}\n          ref={passInput.ref}\n          disabled={loading}\n          error={!!error}\n          type={passInput.showText ? 'text' : 'password'}\n          name='password'\n          placeholder='Пароль'\n          icon={passInput.showText ? 'HideIcon' : 'ShowIcon'}\n          onIconClick={passInput.onIconClick}\n        />\n        <Button>Зарегистрироваться</Button>\n        {loading && 'Loading...'}\n        {success && 'Success'}\n        {error && error.message}\n      </form>\n\n      <span className={cn(styles.text, 'text_color_inactive')}>\n        Уже зарегистрированы?{' '}\n        <Link className={styles.link} to='/login'>\n          Войти\n        </Link>\n      </span>\n    </FormContainer>\n  );\n};\n\nexport default Register;\n","import cn from 'classnames';\nimport styles from './ForgotPassword.module.css';\n\nimport { FC, FormEvent, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport useInput from '../../hooks/useInput';\n\nimport { forgotUserPassword } from '../../redux/actions/userActions';\nimport { userSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst ForgotPassword: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { isAuth } = useAppSelector(userSelectors.userInfo);\n  const { loading, success, error } = useAppSelector(userSelectors.forgotPassword);\n\n  const emailInput = useInput('');\n\n  useEffect(() => {\n    if (emailInput.ref && emailInput.ref.current) {\n      emailInput.ref.current.focus();\n    }\n  }, [emailInput.ref]);\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // todo: validate input\n    dispatch(forgotUserPassword({ email: emailInput.value }));\n  };\n\n  if (isAuth) {\n    return <Redirect to={'/'} />;\n  }\n\n  if (success || localStorage.getItem('resetEmailSent')) {\n    return <Redirect to={'/reset-password'} />;\n  }\n\n  return (\n    <FormContainer title='Восстановление пароля'>\n      <form className={cn(styles.form)} onSubmit={submitHandler}>\n        <Input\n          onChange={emailInput.onChange}\n          value={emailInput.value}\n          ref={emailInput.ref}\n          disabled={loading}\n          error={!!error}\n          type='email'\n          name='email'\n          placeholder='E-mail'\n        />\n        <Button>Восстановить</Button>\n\n        {loading && 'Loading...'}\n        {success && 'Success'}\n        {error && error}\n      </form>\n\n      <span className={cn(styles.text, 'text_color_inactive')}>\n        Вспомнили пароль?{' '}\n        <Link className={styles.link} to='/login'>\n          Войти\n        </Link>\n      </span>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPassword;\n","import cn from 'classnames';\nimport styles from './ResetPassword.module.css';\n\nimport { FC, FormEvent, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport useInput from '../../hooks/useInput';\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport usePassInput from '../../hooks/usePasswordInput';\nimport { resetUserPassword } from '../../redux/actions/userActions';\nimport { userSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst ResetPassword: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { isAuth } = useAppSelector(userSelectors.userInfo);\n  const { loading, success, error } = useAppSelector(userSelectors.resetPassword);\n\n  const passInput = usePassInput('');\n  const tokenInput = useInput('');\n\n  useEffect(() => {\n    if (passInput.ref && passInput.ref.current) {\n      passInput.ref.current.focus();\n    }\n  }, [passInput.ref]);\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(resetUserPassword({ password: passInput.value, token: tokenInput.value }));\n  };\n\n  if (isAuth) {\n    return <Redirect to={'/'} />;\n  }\n\n  if (success) {\n    return <Redirect to={'/login'} />;\n  }\n\n  if (!localStorage.getItem('resetEmailSent')) {\n    return <Redirect to={'/forgot-password'} />;\n  }\n\n  return (\n    <FormContainer title='Восстановление пароля'>\n      <form className={cn(styles.form)} onSubmit={submitHandler}>\n        <Input\n          onChange={passInput.onChange}\n          value={passInput.value}\n          ref={passInput.ref}\n          disabled={loading}\n          error={!!error}\n          type={passInput.showText ? 'text' : 'password'}\n          name='password'\n          placeholder='Введите новый пароль'\n          icon={passInput.showText ? 'HideIcon' : 'ShowIcon'}\n          onIconClick={passInput.onIconClick}\n        />\n        <Input\n          onChange={tokenInput.onChange}\n          value={tokenInput.value}\n          ref={tokenInput.ref}\n          disabled={loading}\n          error={!!error}\n          type='text'\n          name='token'\n          placeholder='Введите код из письма'\n        />\n        <Button>Сохранить</Button>\n\n        {loading && 'Loading...'}\n        {success && 'Success'}\n        {error && error.message}\n      </form>\n\n      <span className={cn(styles.text, 'text_color_inactive')}>\n        Вспомнили пароль?{' '}\n        <Link className={styles.link} to='/login'>\n          Войти\n        </Link>\n      </span>\n    </FormContainer>\n  );\n};\n\nexport default ResetPassword;\n","import { useEffect, useState, useRef, ChangeEvent, SyntheticEvent } from 'react';\n\nconst useProfileInput = (initValue: string) => {\n  const [value, setValue] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    setValue(initValue);\n  }, [initValue]);\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if (e.code === 'Escape') {\n      setDisabled(true);\n    }\n  };\n\n  const onClick = (e: MouseEvent) => {\n    if (inputRef.current !== e.target) {\n      setDisabled(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!disabled) {\n      document.addEventListener('keydown', onKeyDown);\n      document.addEventListener('click', onClick);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n      document.removeEventListener('click', onClick);\n    };\n  }, [disabled]);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setValue(value);\n  };\n\n  const onReset = () => {\n    setValue(initValue);\n  };\n\n  const onIconClick = (e: SyntheticEvent) => {\n    e.preventDefault();\n    if (disabled) {\n      setDisabled(false);\n      setTimeout(() => {\n        if (inputRef && inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 0);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  return {\n    ref: inputRef,\n    disabled,\n    onIconClick,\n    onChange,\n    onReset,\n    value,\n  };\n};\n\nexport default useProfileInput;\n","import cn from 'classnames';\nimport styles from './ProfileForm.module.css';\n\nimport { FC } from 'react';\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport useProfileInput from '../../hooks/useProfileInput';\nimport { updateUserInfo } from '../../redux/actions/userActions';\nimport { userSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst ProfileForm: FC = () => {\n  const dispatch = useAppDispatch();\n  const { user } = useAppSelector(userSelectors.userInfo);\n  const { loading, success, error } = useAppSelector(userSelectors.updateProfile);\n\n  const userInput = useProfileInput(user ? user.name : '');\n  const emailInput = useProfileInput(user ? user.email : '');\n  const passInput = useProfileInput('');\n\n  const submitHandler = () => {\n    // todo: validate inputs\n    dispatch(\n      updateUserInfo({\n        name: userInput.value,\n        email: emailInput.value,\n        ...(passInput.value && { password: passInput.value }),\n      })\n    );\n  };\n\n  const resetHandler = () => {\n    userInput.onReset();\n    emailInput.onReset();\n    passInput.onReset();\n  };\n\n  return (\n    <form className={cn(styles.form)} onSubmit={submitHandler}>\n      <Input\n        onChange={userInput.onChange}\n        value={userInput.value}\n        ref={userInput.ref}\n        type='text'\n        name='username'\n        placeholder='Имя'\n        disabled={userInput.disabled}\n        icon={userInput.disabled ? 'EditIcon' : 'CloseIcon'}\n        onIconClick={userInput.onIconClick}\n      />\n      <Input\n        onChange={emailInput.onChange}\n        value={emailInput.value}\n        ref={emailInput.ref}\n        type='email'\n        name='email'\n        placeholder='E-mail'\n        disabled={emailInput.disabled}\n        icon={emailInput.disabled ? 'EditIcon' : 'CloseIcon'}\n        onIconClick={emailInput.onIconClick}\n      />\n      <Input\n        onChange={passInput.onChange}\n        value={passInput.value}\n        ref={passInput.ref}\n        type='password'\n        name='password'\n        placeholder='Пароль'\n        disabled={passInput.disabled}\n        icon={passInput.disabled ? 'EditIcon' : 'CloseIcon'}\n        onIconClick={passInput.onIconClick}\n      />\n\n      <div className={styles.buttons}>\n        <Button type='secondary' onClick={resetHandler}>\n          Отмена\n        </Button>\n        <Button type='primary'>Сохранить</Button>\n      </div>\n\n      {loading && 'Loading...'}\n      {success && 'Success'}\n      {error && error.message}\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","// import cn from 'classnames';\nimport styles from './ProfileSidebar.module.css';\n\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { userLogout } from '../../redux/actions/userActions';\nimport { useAppDispatch } from '../../hooks/useRedux';\n\nconst ProfileSidebar: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const logoutHandler = () => {\n    dispatch(userLogout());\n  };\n\n  return (\n    <div className={styles.sidebar}>\n      <div className={styles.menu}>\n        <NavLink exact to='/profile' activeClassName={styles.active} className={styles.menuLink}>\n          Профиль\n        </NavLink>\n        <NavLink\n          exact\n          to={`/profile/orders`}\n          activeClassName={styles.active}\n          className={styles.menuLink}\n        >\n          История заказов\n        </NavLink>\n        <button onClick={logoutHandler} className={styles.menuButton}>\n          Выход\n        </button>\n      </div>\n      <span className={styles.text}>\n        В этом разделе вы можете изменить свои персональные данные\n      </span>\n    </div>\n  );\n};\n\nexport default ProfileSidebar;\n","import { ingredientsSelectors } from '../redux/selectors';\nimport { TIngredient } from '../types/ingredientsTypes';\nimport { TOrder } from '../types/ordersTypes';\nimport { useAppSelector } from './useRedux';\n\ntype TIngredientMap = {\n  [name: string]: TIngredient;\n};\n\ntype TOrderIngredientMap = {\n  [name: string]: TIngredient & { qnty: number };\n};\n\nconst useOrderDetails = (order: TOrder) => {\n  const orderIngredientsIds = order.ingredients.filter((id) => id);\n  const allIngredients = useAppSelector(ingredientsSelectors.items);\n\n  const allIngredientsMap: TIngredientMap = allIngredients.reduce(\n    (map: TIngredientMap, item: TIngredient) => ({ ...map, [item._id]: item }),\n    {}\n  );\n\n  const orderIngredientsMap: TOrderIngredientMap = orderIngredientsIds\n    .map((id) => allIngredientsMap[id])\n    .reduce((map: TOrderIngredientMap, item: TIngredient) => {\n      map[item._id] ? (map[item._id].qnty += 1) : (map[item._id] = { ...item, qnty: 1 });\n      return map;\n    }, {});\n\n  const orderIngredients: Array<TIngredient & { qnty: number }> =\n    Object.values(orderIngredientsMap);\n\n  const orderPrice: number = orderIngredientsIds.reduce(\n    (sum: number, id: string) => (sum += allIngredientsMap[id].price),\n    0\n  );\n\n  return {\n    orderIngredients,\n    orderPrice,\n  };\n};\n\nexport default useOrderDetails;\n","import cn from 'classnames';\nimport styles from './OrderCard.module.css';\nimport { FC } from 'react';\n\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport useOrderDetails from '../../hooks/useOrderDetails';\n\nimport { getFormattedDate, getOrderStatus } from '../../utils/helpers';\nimport { TOrder } from '../../types/ordersTypes';\n\ninterface IProps {\n  order: TOrder;\n  onCardClick: () => void;\n  userCard?: boolean;\n}\n\nconst OrderCard: FC<IProps> = ({ order, onCardClick, userCard }) => {\n  const { name, number, status, createdAt } = order;\n  const { orderIngredients, orderPrice } = useOrderDetails(order);\n\n  const ingredientsIcons = () => {\n    const iconsForRender = orderIngredients.slice(0, 5);\n    const restIcons = orderIngredients.slice(5);\n    return (\n      <>\n        {iconsForRender.map((item, index) => (\n          <li key={index} className={styles.ingredientIcon} style={{ zIndex: 10 - index }}>\n            <img src={item.image_mobile} alt='ingredient' />\n          </li>\n        ))}\n        {!!restIcons.length && (\n          <li key={restIcons[0]._id} className={styles.ingredientIcon} style={{ zIndex: 0 }}>\n            <img src={restIcons[0].image_mobile} alt='ingredient' style={{ opacity: 0.8 }} />\n            <span className={cn(styles.text, 'text', 'text_type_digits-default')}>\n              {`+${restIcons.length}`}\n            </span>\n          </li>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <li className={cn(styles.itemCard)} onClick={onCardClick}>\n      <header className={styles.header}>\n        <span className={cn(styles.orderId, 'text', 'text_type_digits-default')}>\n          {`#${number}`}\n        </span>\n        <span className={cn(styles.timestamp, 'text', 'text_color_inactive')}>\n          {getFormattedDate(createdAt)}\n        </span>\n      </header>\n\n      <span className={cn(styles.name, 'text', 'text_type_main-medium')}>{name}</span>\n\n      {userCard && (\n        <span className={cn(styles.status, 'text_type_main-default')}>\n          {getOrderStatus(status)}\n        </span>\n      )}\n\n      <div className={styles.orderInfo}>\n        <ul className={styles.ingredients}>{ingredientsIcons()}</ul>\n        <span className={cn(styles.price, 'text', 'text_type_digits-medium')}>\n          {orderPrice} <CurrencyIcon type='primary' />\n        </span>\n      </div>\n    </li>\n  );\n};\n\nexport default OrderCard;\n","import * as types from '../constants/constants';\n\nimport {\n  TOrder,\n  TSetOrderDetails,\n  TResetOrderDetails,\n  TwsAllOrdersConnectionClose,\n  TwsAllOrdersConnectionStart,\n  TwsUserOrdersConnectionClose,\n  TwsUserOrdersConnectionStart,\n} from '../../types/ordersTypes';\n\nexport const wsAllOrdersConnectionStart = (): TwsAllOrdersConnectionStart => {\n  return { type: types.WS_ALL_ORDERS_CONNECTION_START };\n};\n\nexport const wsAllOrdersConnectionClose = (): TwsAllOrdersConnectionClose => {\n  return { type: types.WS_ALL_ORDERS_CONNECTION_FINISH };\n};\n\nexport const wsUserOrdersConnectionStart = (): TwsUserOrdersConnectionStart => {\n  return { type: types.WS_USER_ORDERS_CONNECTION_START };\n};\n\nexport const wsUserOrdersConnectionClose = (): TwsUserOrdersConnectionClose => {\n  return { type: types.WS_USER_ORDERS_CONNECTION_FINISH };\n};\n\nexport const setOrderDetails = (data: TOrder): TSetOrderDetails => ({\n  type: types.SET_ORDER_DETAILS,\n  payload: data,\n});\n\nexport const resetOrderDetails = (): TResetOrderDetails => ({\n  type: types.RESET_ORDER_DETAILS,\n});\n","import cn from 'classnames';\nimport styles from './UserOrdersList.module.css';\n\nimport { FC, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport OrderCard from '../OrderCard/OrderCard';\nimport Loader from '../UI/Loader/Loader';\nimport Message from '../UI/Message/Message';\n\nimport {\n  wsUserOrdersConnectionClose,\n  wsUserOrdersConnectionStart,\n} from '../../redux/actions/ordersActions';\n\nimport { getIngredients } from '../../redux/actions/ingredientsActions';\nimport { setOrderDetails } from '../../redux/actions/ordersActions';\n\nimport { ingredientsSelectors, ordersSelectors } from '../../redux/selectors';\nimport { TOrder } from '../../types/ordersTypes';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst UserOrdersList: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const { wsConnected, wsError, userOrders } = useAppSelector(ordersSelectors.wsUserOrders);\n  const { loading, success, error } = useAppSelector(ingredientsSelectors.getItems);\n\n  useEffect(() => {\n    !success && dispatch(getIngredients());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    dispatch(wsUserOrdersConnectionStart());\n    return () => {\n      dispatch(wsUserOrdersConnectionClose());\n    };\n  }, [dispatch]);\n\n  const handleCardClick = (item: TOrder) => () => {\n    dispatch(setOrderDetails(item));\n\n    history.push({\n      pathname: `/profile/orders/${item._id}`,\n      state: { background: location },\n    });\n  };\n\n  return (\n    <section className={cn(styles.section)}>\n      {(!wsConnected || loading) && <Loader height='300px' />}\n      {(wsError || error) && <Message message={'Network error'} />}\n      {wsConnected && success && !!userOrders.length && (\n        <ul className={cn(styles.ordersList)}>\n          {userOrders.map((order: TOrder) => (\n            <OrderCard\n              key={order._id}\n              order={order}\n              onCardClick={handleCardClick(order)}\n              userCard\n            />\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default UserOrdersList;\n","import cn from 'classnames';\nimport styles from './Profile.module.css';\n\nimport { FC } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport ProfileForm from '../../components/ProfileForm/ProfileForm';\nimport ProfileSidebar from '../../components/ProfileSidebar/ProfileSidebar';\nimport UserOrdersList from '../../components/UserOrdersList/UserOrdersList';\n\nconst ProfilePage: FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <div className={cn(styles.container)}>\n      <ProfileSidebar />\n      <Switch>\n        <Route exact path={path}>\n          <ProfileForm />\n        </Route>\n        <Route path={`${path}/orders`}>\n          <UserOrdersList />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import cn from 'classnames';\nimport styles from './IngredientDetails.module.css';\n\nimport { FC } from 'react';\nimport { TIngredient } from '../../types/ingredientsTypes';\n\ninterface IProps {\n  ingredient: TIngredient;\n}\n\nconst IngredientDetails: FC<IProps> = ({ ingredient }) => {\n  const { image_large, name, calories, proteins, fat, carbohydrates } = ingredient;\n\n  return (\n    <section className={cn(styles.container)}>\n      <img src={image_large} alt={name}></img>\n      <span className={cn(styles.name, 'text_type_main-medium')}>{name}</span>\n      <ul className={cn(styles.props, 'text_type_main-default', 'text_color_inactive')}>\n        <li>\n          Калории, ккал\n          <span className={cn('text_type_digits-default')}>{calories}</span>\n        </li>\n        <li>\n          Белки, г<span className={cn('text_type_digits-default')}>{proteins}</span>\n        </li>\n        <li>\n          Жиры, г <span className={cn('text_type_digits-default')}>{fat}</span>\n        </li>\n        <li>\n          Углеводы, г<span className={cn('text_type_digits-default')}>{carbohydrates}</span>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientDetails;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport styles from './Ingredient.module.css';\nimport cn from 'classnames';\n\nimport { FC, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\nimport { useParams } from 'react-router-dom';\n\nimport IngredientDetails from '../../components/IngredientDetails/IngredientDetails';\nimport Loader from '../../components/UI/Loader/Loader';\nimport Message from '../../components/UI/Message/Message';\n\nimport { getIngredients } from '../../redux/actions/ingredientsActions';\nimport { ingredientsSelectors } from '../../redux/selectors';\nimport { TPageParams } from '../../types/mainTypes';\nimport { TIngredient } from '../../types/ingredientsTypes';\n\nconst Ingredient: FC = () => {\n  const dispatch = useAppDispatch();\n  const { id } = useParams<TPageParams>();\n\n  const { loading, success, error } = useAppSelector(ingredientsSelectors.getItems);\n  const items = useAppSelector(ingredientsSelectors.items);\n  const currentItem = items.find((item: TIngredient) => item._id === id);\n\n  useEffect(() => {\n    !success && dispatch(getIngredients());\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {loading && <Loader height='300px' />}\n      {error && <Message message={error.message} />}\n      {success && currentItem && (\n        <>\n          <h2 className={cn(styles.title, 'text', 'text_type_main-large')}>Детали ингредиента</h2>\n          <IngredientDetails ingredient={currentItem} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Ingredient;\n","import cn from 'classnames';\nimport styles from './NotFound.module.css';\n\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound: FC = () => {\n  return (\n    <div className={cn(styles.main)}>\n      <h1>404 - page not found</h1>\n      <Link to='/'>Go to the main page</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { FC } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks/useRedux';\nimport { userSelectors } from '../../redux/selectors';\n\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const { isAuth } = useAppSelector(userSelectors.userInfo);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import { useHistory } from 'react-router-dom';\nimport { FC } from 'react';\n\nimport IngredientDetails from '../IngredientDetails/IngredientDetails';\nimport Modal from '../Modal/Modal';\n\nimport { resetIngredientDetails } from '../../redux/actions/ingredientsActions';\nimport { ingredientsSelectors } from '../../redux/selectors/';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst ModalWithIngredient: FC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const ingredientDetails = useAppSelector(ingredientsSelectors.ingredientDetails);\n\n  const handleCloseModal = () => {\n    history.goBack();\n    dispatch(resetIngredientDetails());\n  };\n\n  if (!ingredientDetails) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={handleCloseModal} title={'Детали ингредиента'} largeTitle>\n      <IngredientDetails ingredient={ingredientDetails} />\n    </Modal>\n  );\n};\n\nexport default ModalWithIngredient;\n","import cn from 'classnames';\nimport styles from './OrdersList.module.css';\n\nimport { FC } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport OrderCard from '../OrderCard/OrderCard';\n\nimport { setOrderDetails } from '../../redux/actions/ordersActions';\nimport { TOrder } from '../../types/ordersTypes';\nimport { useAppDispatch } from '../../hooks/useRedux';\n\ninterface IProps {\n  ordersList: Array<TOrder>;\n}\n\nconst OrdersList: FC<IProps> = ({ ordersList }) => {\n  const dispatch = useAppDispatch();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleCardClick = (item: TOrder) => () => {\n    dispatch(setOrderDetails(item));\n\n    history.push({\n      pathname: `/feed/${item._id}`,\n      state: { background: location },\n    });\n  };\n\n  return (\n    <section className={cn(styles.section)}>\n      <ul className={cn(styles.ordersList)}>\n        {ordersList.map((order: TOrder) => (\n          <OrderCard key={order._id} order={order} onCardClick={handleCardClick(order)} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default OrdersList;\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { TOrder } from '../../types/ordersTypes';\nimport styles from './OrdersStatistic.module.css';\n\ninterface IProps {\n  ordersList: Array<TOrder>;\n  ordersTotal: number;\n  ordersTotalToday: number;\n}\n\nconst OrderStatistic: FC<IProps> = ({ ordersList, ordersTotal, ordersTotalToday }) => {\n  const completedOrders = ordersList.filter(({ status }) => status === 'done').slice(0, 10);\n  const inProgressOrders = ordersList.filter(({ status }) => status !== 'done').slice(0, 10);\n\n  return (\n    <section className={cn(styles.section)}>\n      <div className={styles.orders}>\n        <div className={styles.column}>\n          <div className={cn('text', 'text_type_main-medium')}>Готовы:</div>\n          <div className={styles.list}>\n            {completedOrders.map((order) => (\n              <span\n                key={order._id}\n                className={cn(styles.completed, 'text', 'text_type_digits-default')}\n              >\n                {`#${order.number}`}\n              </span>\n            ))}\n          </div>\n        </div>\n        <div className={styles.column}>\n          <div className={cn('text', 'text_type_main-medium')}>В работе:</div>\n          <div className={styles.list}>\n            {inProgressOrders.map((order) => (\n              <span\n                key={order._id}\n                className={cn(styles.inProgress, 'text', 'text_type_digits-default')}\n              >\n                {`#${order.number}`}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className={cn(styles.total)}>\n        <div className={cn('text', 'text_type_main-medium')}>Выполнено за все время:</div>\n        <div className={cn(styles.count, 'text', 'text_type_digits-large')}>{ordersTotal}</div>\n      </div>\n      <div className={cn(styles.today)}>\n        <div className={cn('text', 'text_type_main-medium')}>Выполнено за сегодня:</div>\n        <div className={cn(styles.count, 'text', 'text_type_digits-large')}>\n          {ordersTotalToday}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default OrderStatistic;\n","import cn from 'classnames';\nimport styles from './Feed.module.css';\n\nimport { FC, useEffect } from 'react';\n\nimport Loader from '../../components/UI/Loader/Loader';\nimport OrdersList from '../../components/OrdersList/OrdersList';\nimport OrdersStatistic from '../../components/OrdersStatistic/OrdersStatistic';\nimport Message from '../../components/UI/Message/Message';\n\nimport {\n  wsAllOrdersConnectionClose,\n  wsAllOrdersConnectionStart,\n} from '../../redux/actions/ordersActions';\nimport { getIngredients } from '../../redux/actions/ingredientsActions';\nimport { ingredientsSelectors, ordersSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst Feed: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const wsAllOrders = useAppSelector(ordersSelectors.wsAllOrders);\n  const { loading, success, error } = useAppSelector(ingredientsSelectors.getItems);\n\n  const { wsConnected, wsError, allOrders, ordersTotal, ordersTotalToday } = wsAllOrders;\n\n  useEffect(() => {\n    !success && dispatch(getIngredients());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    !wsConnected && dispatch(wsAllOrdersConnectionStart());\n    return () => {\n      wsConnected && dispatch(wsAllOrdersConnectionClose());\n    };\n  }, [dispatch, wsConnected]);\n\n  return (\n    <div className={styles.container}>\n      <h1 className={cn(styles.title, 'text', 'text_type_main-large')}>Лента заказов</h1>\n      {(!wsConnected || loading) && <Loader height='300px' />}\n      {(wsError || error) && <Message message={'Network error'} />}\n      {wsConnected && success && !!allOrders.length && (\n        <div className={styles.feed}>\n          <OrdersList ordersList={allOrders} />\n          <OrdersStatistic\n            ordersList={allOrders}\n            ordersTotal={ordersTotal}\n            ordersTotalToday={ordersTotalToday}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n","import cn from 'classnames';\nimport styles from './OrderDetails.module.css';\n\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { getFormattedDate, getOrderStatus } from '../../utils/helpers';\nimport useOrderDetails from '../../hooks/useOrderDetails';\nimport { FC } from 'react';\nimport { TOrder } from '../../types/ordersTypes';\n\ninterface IProps {\n  order: TOrder;\n}\n\nconst OrderDetails: FC<IProps> = ({ order }) => {\n  const { name, status, createdAt } = order;\n  const { orderIngredients, orderPrice } = useOrderDetails(order);\n\n  return (\n    <section className={cn(styles.container, 'text_type_main-default')}>\n      <span className={cn(styles.name, 'text_type_main-medium')}>{name}</span>\n      <span className={cn(styles.status, 'text_type_main-default')}>{getOrderStatus(status)}</span>\n      <span className={cn(styles.title, 'text_type_main-medium')}>Состав:</span>\n\n      <ul className={cn(styles.ingredientsList)}>\n        {orderIngredients.map((ingredient) => {\n          const { image_mobile, name, price, qnty } = ingredient;\n          return (\n            <li key={ingredient._id} className={styles.ingredient}>\n              <div className={styles.ingredientIcon}>\n                <img src={image_mobile} alt='ingredient' />\n              </div>\n              <div className={styles.ingredientInfo}>\n                <span className={cn(styles.ingredientName, 'text', 'text_type_main-default')}>\n                  {name}\n                </span>\n                <span className={cn(styles.ingredientPrice, 'text', 'text_type_digits-default')}>\n                  {qnty} x {price} &nbsp;\n                  <CurrencyIcon type='primary' />\n                </span>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className={styles.footer}>\n        <span className='text text_type_main-default text_color_inactive'>\n          {getFormattedDate(createdAt)}\n        </span>\n        <span className={cn(styles.orderPrice, 'text_type_digits-default')}>\n          {orderPrice} &nbsp;\n          <CurrencyIcon type='primary' />\n        </span>\n      </div>\n    </section>\n  );\n};\n\nexport default OrderDetails;\n","import styles from './Order.module.css';\nimport cn from 'classnames';\n\nimport { FC, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport OrderDetails from '../../components/OrderDetails/OrderDetails';\nimport Loader from '../../components/UI/Loader/Loader';\nimport Message from '../../components/UI/Message/Message';\n\nimport { getIngredients } from '../../redux/actions/ingredientsActions';\nimport {\n  wsAllOrdersConnectionClose,\n  wsAllOrdersConnectionStart,\n} from '../../redux/actions/ordersActions';\n\nimport { TPageParams } from '../../types/mainTypes';\nimport { ingredientsSelectors, ordersSelectors } from '../../redux/selectors';\nimport { TOrder } from '../../types/ordersTypes';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst Order: FC = () => {\n  const dispatch = useAppDispatch();\n  const { id } = useParams<TPageParams>();\n\n  const { wsConnected, wsError, allOrders } = useAppSelector(ordersSelectors.wsAllOrders);\n  const { loading, success, error } = useAppSelector(ingredientsSelectors.getItems);\n\n  useEffect(() => {\n    !success && dispatch(getIngredients());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    !wsConnected && dispatch(wsAllOrdersConnectionStart());\n    return () => {\n      wsConnected && dispatch(wsAllOrdersConnectionClose());\n    };\n  }, [dispatch, wsConnected]);\n\n  const currentOrder = allOrders.find((order: TOrder) => order._id === id);\n\n  return (\n    <div className={styles.container}>\n      {(!wsConnected || loading) && <Loader height='300px' />}\n      {(wsError || error) && <Message message={'Network error'} />}\n      {wsConnected && success && currentOrder && (\n        <>\n          <span className={cn(styles.title, 'text_type_digits-default')}>\n            # {currentOrder.number}\n          </span>\n          <OrderDetails order={currentOrder} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Order;\n","import styles from './UserOrder.module.css';\nimport cn from 'classnames';\n\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport OrderDetails from '../../components/OrderDetails/OrderDetails';\nimport Loader from '../../components/UI/Loader/Loader';\nimport Message from '../../components/UI/Message/Message';\n\nimport { getIngredients } from '../../redux/actions/ingredientsActions';\nimport {\n  wsUserOrdersConnectionClose,\n  wsUserOrdersConnectionStart,\n} from '../../redux/actions/ordersActions';\nimport { TPageParams } from '../../types/mainTypes';\nimport { ingredientsSelectors, ordersSelectors } from '../../redux/selectors';\nimport { TOrder } from '../../types/ordersTypes';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nfunction UserOrder() {\n  const dispatch = useAppDispatch();\n  const { id } = useParams<TPageParams>();\n\n  const { wsConnected, wsError, userOrders } = useAppSelector(ordersSelectors.wsUserOrders);\n  const { loading, success, error } = useAppSelector(ingredientsSelectors.getItems);\n\n  useEffect(() => {\n    !success && dispatch(getIngredients());\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    !wsConnected && dispatch(wsUserOrdersConnectionStart());\n    return () => {\n      wsConnected && dispatch(wsUserOrdersConnectionClose());\n    };\n  }, [dispatch, wsConnected]);\n\n  const currentOrder = userOrders.find((order: TOrder) => order._id === id);\n\n  return (\n    <div className={styles.container}>\n      {(!wsConnected || loading) && <Loader height='300px' />}\n      {(wsError || error) && <Message message={'Network error'} />}\n      {wsConnected && success && currentOrder && (\n        <>\n          <span className={cn(styles.title, 'text_type_digits-default')}>\n            # {currentOrder.number}\n          </span>\n          <OrderDetails order={currentOrder} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default UserOrder;\n","import { useHistory } from 'react-router-dom';\nimport { FC } from 'react';\n\nimport OrderDetails from '../OrderDetails/OrderDetails';\nimport Modal from '../Modal/Modal';\n\nimport { resetOrderDetails } from '../../redux/actions/ordersActions';\nimport { ordersSelectors } from '../../redux/selectors';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst ModalWithOrder: FC = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const orderDetails = useAppSelector(ordersSelectors.orderDetails);\n\n  const handleCloseModal = () => {\n    history.goBack();\n    dispatch(resetOrderDetails());\n  };\n\n  if (!orderDetails) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={handleCloseModal} title={`#${orderDetails.number}`}>\n      <OrderDetails order={orderDetails} />\n    </Modal>\n  );\n};\n\nexport default ModalWithOrder;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport styles from './App.module.css';\n\nimport { FC, useEffect } from 'react';\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\n\nimport AppHeader from '../AppHeader/AppHeader';\nimport HomePage from '../../pages/Home/Home';\nimport LoginPage from '../../pages/Login/Login';\nimport RegisterPage from '../../pages/Register/Register';\nimport ForgotPasswordPage from '../../pages/ForgotPassword/ForgotPassword';\nimport ResetPasswordPage from '../../pages/ResetPassword/ResetPassword';\nimport ProfilePage from '../../pages/Profile/Profile';\nimport IngridientPage from '../../pages/Ingredient/Ingredient';\nimport NotFoundPage from '../../pages/404/NotFound';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Loader from '../UI/Loader/Loader';\nimport ModalWithIngredient from '../ModalWithIngridient/ModalWithIngredient';\nimport FeedPage from '../../pages/Feed/Feed';\nimport OrderPage from '../../pages/Order/Order';\nimport UserOrderPage from '../../pages/UserOrder/UserOrder';\nimport ModalWithOrder from '../ModalWithOrder/ModalWithOrder';\n\nimport { checkUserAuth, userAuthFail } from '../../redux/actions/userActions';\nimport { userSelectors, ingredientsSelectors, ordersSelectors } from '../../redux/selectors';\nimport { getRefreshToken } from '../../utils/helpers';\nimport { TLocation } from '../../types/mainTypes';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nconst App: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const history = useHistory();\n  const location = useLocation<{ background: TLocation }>();\n\n  const { isCheckAuth } = useAppSelector(userSelectors.userInfo);\n  const ingredientDetails = useAppSelector(ingredientsSelectors.ingredientDetails);\n  const orderDetails = useAppSelector(ordersSelectors.orderDetails);\n\n  useEffect(() => {\n    getRefreshToken() ? dispatch(checkUserAuth()) : dispatch(userAuthFail());\n  }, []);\n\n  if (isCheckAuth) {\n    return <Loader height='100vh' />;\n  }\n\n  const background = history.action === 'PUSH' && location.state && location.state.background;\n\n  return (\n    <div className={styles.wrapper}>\n      <AppHeader />\n      <div className={styles.main}>\n        <Switch location={background || location}>\n          <Route exact path='/' children={<HomePage />} />\n          <Route exact path='/login' children={<LoginPage />} />\n          <Route exact path='/register' children={<RegisterPage />} />\n          <Route exact path='/forgot-password' children={<ForgotPasswordPage />} />\n          <Route exact path='/reset-password' children={<ResetPasswordPage />} />\n          <Route exact path='/ingredients/:id' children={<IngridientPage />} />\n          <Route exact path='/feed' children={<FeedPage />} />\n          <Route exact path='/feed/:id' children={<OrderPage />} />\n          <ProtectedRoute path='/profile/orders/:id' children={<UserOrderPage />} />\n          <ProtectedRoute path='/profile' children={<ProfilePage />} />\n          <Route children={<NotFoundPage />} />\n        </Switch>\n\n        {background && ingredientDetails && (\n          <Route exact path='/ingredients/:id' children={<ModalWithIngredient />} />\n        )}\n\n        {background && orderDetails && (\n          <Route exact path={['/feed/:id', '/profile/orders/:id']} children={<ModalWithOrder />} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { Middleware } from 'redux';\nimport { getAccessToken } from '../../utils/helpers';\nimport { wsAllOrdersActions, wsUserOrdersActions } from './../constants/constants';\n\ntype WsActions = typeof wsAllOrdersActions | typeof wsUserOrdersActions;\n\nexport const socketMiddleware = (\n  wsUrl: string,\n  wsActions: WsActions,\n  withAuth: boolean\n): Middleware => {\n  return (store) => {\n    let socket: WebSocket | null = null;\n\n    return (next) => (action) => {\n      const { dispatch } = store;\n      const { type } = action;\n      const { wsInit, wsClose, onOpen, onError, onClose, onMessage } = wsActions;\n\n      let token = withAuth ? getAccessToken() : null;\n\n      if (type === wsInit) {\n        let url = token ? `${wsUrl}?token=${token}` : `${wsUrl}/all`;\n        socket = new WebSocket(url);\n      }\n\n      if (socket) {\n        socket.onopen = (event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: onClose, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ type: onMessage, payload: restParsedData });\n        };\n\n        if (type === wsClose) {\n          socket.close();\n        }\n      }\n\n      next(action);\n    };\n  };\n};\n","import { combineReducers } from 'redux';\nimport * as types from '../constants/constants';\n\nimport {\n  TAllOrdersInitialState,\n  TOrderDetailsInitialState,\n  TOrdersActions,\n  TUserOrdersInitialState,\n} from '../../types/ordersTypes';\n\nconst allOrdersInitialState: TAllOrdersInitialState = {\n  wsConnected: false,\n  wsError: null,\n  allOrders: [],\n  ordersTotal: 0,\n  ordersTotalToday: 0,\n};\n\nexport const allOrdersReducer = (\n  state = allOrdersInitialState,\n  action: TOrdersActions\n): TAllOrdersInitialState => {\n  switch (action.type) {\n    case types.WS_ALL_ORDERS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        wsConnected: true,\n        wsError: null,\n      };\n    case types.WS_ALL_ORDERS_CONNECTION_ERROR:\n      return {\n        ...state,\n        wsConnected: false,\n        wsError: action.payload,\n      };\n    case types.WS_ALL_ORDERS_CONNECTION_CLOSED:\n      return {\n        ...allOrdersInitialState,\n      };\n    case types.WS_GET_ALL_ORDERS:\n      return {\n        ...state,\n        allOrders: action.payload.orders.filter(\n          (order) => order.ingredients && !!order.ingredients.length\n        ),\n        ordersTotal: action.payload.total,\n        ordersTotalToday: action.payload.totalToday,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userOrdersInitialState: TUserOrdersInitialState = {\n  wsConnected: false,\n  wsError: null,\n  userOrders: [],\n};\n\nexport const userOrdersReducer = (\n  state = userOrdersInitialState,\n  action: TOrdersActions\n): TUserOrdersInitialState => {\n  switch (action.type) {\n    case types.WS_USER_ORDERS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        wsConnected: true,\n        wsError: null,\n      };\n    case types.WS_USER_ORDERS_CONNECTION_ERROR:\n      return {\n        ...state,\n        wsConnected: false,\n        wsError: action.payload,\n      };\n    case types.WS_USER_ORDERS_CONNECTION_CLOSED:\n      return {\n        ...userOrdersInitialState,\n      };\n    case types.WS_GET_USER_ORDERS:\n      return {\n        ...state,\n        userOrders: [...action.payload.orders]\n          .filter((order) => order.ingredients && !!order.ingredients.length)\n          .reverse(),\n      };\n    default:\n      return state;\n  }\n};\n\nconst orederDetailsInitialState: TOrderDetailsInitialState = { order: null };\n\nexport const orederDetailsReducer = (\n  state = orederDetailsInitialState,\n  action: TOrdersActions\n): TOrderDetailsInitialState => {\n  switch (action.type) {\n    case types.SET_ORDER_DETAILS:\n      return {\n        ...state,\n        order: action.payload,\n      };\n    case types.RESET_ORDER_DETAILS:\n      return {\n        ...state,\n        order: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const ordersReducer = combineReducers({\n  allOrders: allOrdersReducer,\n  userOrders: userOrdersReducer,\n  orederDetails: orederDetailsReducer,\n});\n","import * as types from '../constants/constants';\nimport { TIngredientsActions, TIngredientsState } from '../../types/ingredientsTypes';\n\nconst initState: TIngredientsState = {\n  loading: false,\n  success: false,\n  error: null,\n  items: [],\n  itemDetails: null,\n};\n\nexport const ingredientsReducer = (\n  state = initState,\n  action: TIngredientsActions\n): TIngredientsState => {\n  switch (action.type) {\n    case types.INGREDIENTS_REQUEST: {\n      return { ...state, loading: true, success: false, error: null };\n    }\n    case types.INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        error: null,\n        items: [...action.payload],\n      };\n    }\n    case types.INGREDIENTS_ERROR: {\n      return { ...state, loading: false, error: action.error };\n    }\n    case types.SET_INGREDIENT_DETAILS: {\n      return { ...state, itemDetails: action.payload };\n    }\n    case types.RESET_INGREDIENT_DETAILS: {\n      return { ...state, itemDetails: null };\n    }\n    default:\n      return state;\n  }\n};\n","import * as types from '../constants/constants';\nimport { TConstructorActions, TConstructorState } from '../../types/constructorTypes';\n\nconst initState: TConstructorState = {\n  bun: null,\n  toppings: [],\n  visible: false,\n  loading: false,\n  error: null,\n  order: null,\n};\n\nexport const constructorReducer = (\n  state = initState,\n  action: TConstructorActions\n): TConstructorState => {\n  switch (action.type) {\n    case types.ADD_BUN: {\n      return { ...state, bun: { ...action.payload } };\n    }\n    case types.ADD_TOPPING: {\n      return {\n        ...state,\n        toppings: [...state.toppings, { ...action.payload }],\n      };\n    }\n    case types.DELETE_TOPPING: {\n      return {\n        ...state,\n        toppings: [...state.toppings.filter((el) => el.uuid !== action.payload)],\n      };\n    }\n    case types.UPDATE_TOPPINGS_LIST: {\n      return { ...state, toppings: [...action.payload] };\n    }\n    case types.CLEAR_ORDER_ITEMS: {\n      return { ...state, bun: null, toppings: [] };\n    }\n    case types.ORDER_REQUEST: {\n      return { ...state, visible: false, loading: true, error: null };\n    }\n    case types.ORDER_SUCCESS: {\n      return {\n        ...state,\n        visible: true,\n        loading: false,\n        error: null,\n        order: action.payload,\n      };\n    }\n    case types.ORDER_ERROR: {\n      return { ...state, visible: true, loading: false, error: action.error };\n    }\n    case types.CLOSE_ORDER_CREATE_DETAILS: {\n      return { ...state, visible: false, order: null };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { TMap, TRequestState, TUserActions, TUserInfoState } from '../../types/userTypes';\nimport * as types from '../constants/constants';\n\nconst initState: TUserInfoState = {\n  isCheckAuth: true,\n  isAuth: false,\n  user: { email: '', name: '' },\n};\n\nexport const userInfoReducer = (state = initState, action: TUserActions): TUserInfoState => {\n  switch (action.type) {\n    case types.USER_CHECK_AUTH_SUCCESS:\n      return { isCheckAuth: false, isAuth: true, user: action.payload };\n    case types.USER_CHECK_AUTH_FAIL:\n    case types.USER_CHECK_AUTH_ERROR:\n    case types.USER_LOGOUT_SUCCESS:\n      return { ...initState, isCheckAuth: false, user: null };\n    case types.USER_LOGIN_SUCCESS:\n    case types.USER_REGISTER_SUCCESS:\n      return { ...state, isAuth: true, user: action.payload };\n    case types.USER_PROFILE_SUCCESS:\n    case types.USER_UPDATE_PROFILE_SUCCESS:\n      return { ...state, user: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const createRequestReducer = (map: TMap) => {\n  const initState: TRequestState = { loading: false, success: false, error: null };\n  return (state = initState, action: any): TRequestState => {\n    switch (action.type) {\n      case map.request:\n        return { loading: true, success: false, error: null };\n      case map.success:\n        return { loading: false, success: true, error: null };\n      case map.error:\n        return { loading: false, success: false, error: action.error };\n      default:\n        return state;\n    }\n  };\n};\n\nexport const userLoginReducer = createRequestReducer(types.userLoginMap);\nexport const userRegisterReducer = createRequestReducer(types.userRegisterMap);\nexport const userProfileReducer = createRequestReducer(types.userProfileMap);\nexport const userUpdateProfileReducer = createRequestReducer(types.userUpdateProfileMap);\nexport const userForgotPasswordReducer = createRequestReducer(types.userForgotPasswordMap);\nexport const userResetPasswordReducer = createRequestReducer(types.userResetPasswordMap);\n\nexport const userReducer = combineReducers({\n  info: userInfoReducer,\n  login: userLoginReducer,\n  register: userRegisterReducer,\n  profile: userProfileReducer,\n  updateProfile: userUpdateProfileReducer,\n  forgotPassword: userForgotPasswordReducer,\n  resetPassword: userResetPasswordReducer,\n});\n","import { combineReducers } from 'redux';\n\nimport { ordersReducer } from './ordersReducer';\nimport { ingredientsReducer } from './ingredientsReducer';\nimport { constructorReducer } from './constructorReducer';\nimport { userReducer } from './userReducer';\n\nexport const rootReducer = combineReducers({\n  burgerIngredients: ingredientsReducer,\n  burgerConstructor: constructorReducer,\n  user: userReducer,\n  orders: ordersReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { socketMiddleware } from './middleware/socketMiddleware';\nimport { rootReducer } from './reducers/index';\nimport { wsAllOrdersActions, wsUserOrdersActions } from './constants/constants';\n\nconst wsUrl = 'wss://norma.nomoreparties.space/orders';\n\nconst middleware = [\n  thunk,\n  socketMiddleware(wsUrl, wsAllOrdersActions, false),\n  socketMiddleware(wsUrl, wsUserOrdersActions, true),\n];\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n","import './index.css';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrderDetails_container__1irkK\",\"number\":\"OrderDetails_number__3XfVa\",\"name\":\"OrderDetails_name__F0oyW\",\"status\":\"OrderDetails_status__dRFqs\",\"title\":\"OrderDetails_title__juS-K\",\"ingredientsList\":\"OrderDetails_ingredientsList__3pYfX\",\"ingredient\":\"OrderDetails_ingredient__2zdqq\",\"ingredientInfo\":\"OrderDetails_ingredientInfo__lvUD9\",\"ingredientIcon\":\"OrderDetails_ingredientIcon__2IeEt\",\"ingredientPrice\":\"OrderDetails_ingredientPrice__2jg1d\",\"footer\":\"OrderDetails_footer__3mSK1\",\"orderPrice\":\"OrderDetails_orderPrice__1HKH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"BurgerConstructor_section__3Pqqa\",\"dropTarget\":\"BurgerConstructor_dropTarget__2z5Om\",\"loader\":\"BurgerConstructor_loader__3u5TT\",\"dropTargetHover\":\"BurgerConstructor_dropTargetHover__qREqh\",\"header\":\"BurgerConstructor_header__2uW1O\",\"clearBtn\":\"BurgerConstructor_clearBtn__n1rRF\",\"bun\":\"BurgerConstructor_bun__3P_mV\",\"itemsBox\":\"BurgerConstructor_itemsBox__3Pd7g\",\"item\":\"BurgerConstructor_item__1-7PB\",\"total\":\"BurgerConstructor_total__3LNMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileSidebar_container__7Qfax\",\"sidebar\":\"ProfileSidebar_sidebar__FEh07\",\"menu\":\"ProfileSidebar_menu__PofQJ\",\"menuLink\":\"ProfileSidebar_menuLink__3cTXv\",\"active\":\"ProfileSidebar_active__1URm9\",\"menuButton\":\"ProfileSidebar_menuButton__3ymT-\",\"text\":\"ProfileSidebar_text__1eHAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"BurgerIngredients_section__2_sVq\",\"tabs\":\"BurgerIngredients_tabs__NhSWl\",\"ingredientsList\":\"BurgerIngredients_ingredientsList__372Rq\",\"ingredientsGroupTitle\":\"BurgerIngredients_ingredientsGroupTitle__39X59\",\"ingredientsGroup\":\"BurgerIngredients_ingredientsGroup__1o9nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__P3_V5\",\"largeTitle\":\"Modal_largeTitle__1ntmf\",\"title\":\"Modal_title__kbqpq\",\"emptyTitle\":\"Modal_emptyTitle__3mwQS\",\"closeIcon\":\"Modal_closeIcon__3xOgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrderCreateDetails_container__2cUmb\",\"number\":\"OrderCreateDetails_number__3Om1t\",\"textNumber\":\"OrderCreateDetails_textNumber__owbmw\",\"textStart\":\"OrderCreateDetails_textStart__1QT6n\",\"textWait\":\"OrderCreateDetails_textWait__1Y291\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3bufY\",\"text\":\"Login_text__yxCrE\",\"link\":\"Login_link__Bm8wR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppHeader_header__X9aJA\",\"container\":\"AppHeader_container__24Fms\",\"logo\":\"AppHeader_logo__3VxwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1s89M\",\"constructor\":\"Home_constructor__3i680\",\"title\":\"Home_title__1RtlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemCard\":\"IngridientCard_itemCard__10bCM\",\"price\":\"IngridientCard_price__3ZxFi\",\"name\":\"IngridientCard_name__303o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Register_form__1kKs6\",\"text\":\"Register_text__1NAiF\",\"link\":\"Register_link___UvI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ForgotPassword_form__1nQuw\",\"text\":\"ForgotPassword_text__5JdPJ\",\"link\":\"ForgotPassword_link__3-cXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ResetPassword_form__2P1rR\",\"text\":\"ResetPassword_text__2ByhD\",\"link\":\"ResetPassword_link__2BAlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IngredientDetails_container__1CgpU\",\"name\":\"IngredientDetails_name__1KZEv\",\"props\":\"IngredientDetails_props__2gjBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feed_container__3UySO\",\"title\":\"Feed_title__1nI-Q\",\"feed\":\"Feed_feed__I3EXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3ox-V\",\"main\":\"App_main__w13HL\",\"container\":\"App_container__16xz_\",\"constructor\":\"App_constructor__3itM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"HeaderLink_link__19BWA\",\"last\":\"HeaderLink_last__3pw4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__c9XyD\",\"ldsDualRing\":\"Loader_ldsDualRing__3aaaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__jc5mm\",\"message\":\"Message_message__Junzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormContainer_container___Ycjx\",\"title\":\"FormContainer_title__2eyCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__-rAZu\",\"buttons\":\"ProfileForm_buttons__3w6PY\",\"link\":\"ProfileForm_link__32ht1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"UserOrdersList_section__2LOTg\",\"ordersList\":\"UserOrdersList_ordersList__TBtrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Ingredient_container__Xx0sL\",\"title\":\"Ingredient_title__2faDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"OrdersList_section__2mAaw\",\"ordersList\":\"OrdersList_ordersList__1QFm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Order_container__1FM7j\",\"title\":\"Order_title__2tfhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserOrder_container__2As0z\",\"title\":\"UserOrder_title__33Zxe\"};"],"sourceRoot":""}